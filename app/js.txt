(function ($) {
    // Detect touch support
    $.support.touch = 'ontouchend' in document;
    // Ignore browsers without touch support
    if (!$.support.touch) {
    return;
    }
    var mouseProto = $.ui.mouse.prototype,
        _mouseInit = mouseProto._mouseInit,
        touchHandled;

    function simulateMouseEvent (event, simulatedType) { //use this function to simulate mouse event
    // Ignore multi-touch events
        if (event.originalEvent.touches.length > 1) {
        return;
        }
        
    event.preventDefault(); //use this to prevent scrolling during ui use
    

    var touch = event.originalEvent.changedTouches[0],
        simulatedEvent = document.createEvent('MouseEvents');
    // Initialize the simulated mouse event using the touch event's coordinates
    simulatedEvent.initMouseEvent(
        simulatedType,    // type
        true,             // bubbles                    
        true,             // cancelable                 
        window,           // view                       
        1,                // detail                     
        touch.screenX,    // screenX                    
        touch.screenY,    // screenY                    
        touch.clientX,    // clientX                    
        touch.clientY,    // clientY                    
        false,            // ctrlKey                    
        false,            // altKey                     
        false,            // shiftKey                   
        false,            // metaKey                    
        0,                // button                     
        null              // relatedTarget              
        );
	
	    // Dispatch the simulated event to the target element
	    event.target.dispatchEvent(simulatedEvent);
    }
    
    mouseProto._touchStart = function (event) {
	    var self = this;
	    // Ignore the event if another widget is already being handled
	    if (touchHandled || !self._mouseCapture(event.originalEvent.changedTouches[0])) {
	        return;
	    }
	    // Set the flag to prevent other widgets from inheriting the touch event
	    touchHandled = true;
	    // Track movement to determine if interaction was a click
	    self._touchMoved = false;
	    // Simulate the mouseover event
	    simulateMouseEvent(event, 'mouseover');
	    // Simulate the mousemove event
	    simulateMouseEvent(event, 'mousemove');
	    // Simulate the mousedown event
	    simulateMouseEvent(event, 'mousedown');
    };

    mouseProto._touchMove = function (event) {
	    // Ignore event if not handled
	    if (!touchHandled) {
	        return;
	        }
	    // Interaction was not a click
	    this._touchMoved = true;
	    // Simulate the mousemove event
	    simulateMouseEvent(event, 'mousemove');
    };
    
    mouseProto._touchEnd = function (event) {
	    // Ignore event if not handled
	    if (!touchHandled) {
	        return;
	    }
	    // Simulate the mouseup event
	    simulateMouseEvent(event, 'mouseup');
	    // Simulate the mouseout event
	    simulateMouseEvent(event, 'mouseout');
	    // If the touch interaction did not move, it should trigger a click
	    if (!this._touchMoved) {
	      // Simulate the click event
	      simulateMouseEvent(event, 'click');
	    }
	    // Unset the flag to allow other widgets to inherit the touch event
	    touchHandled = false;
	
	    if( $(event.target).hasClass("custanet-tbFore") ){
			var v = $(event.target).val();
			setTimeout(function(){
			    $(event.target).val("").focus().val(v);
			    
			}, 0);
	    }
    };
    
    mouseProto._mouseInit = function () {
	    var self = this;
	    // Delegate the touch handlers to the widget's element
	    self.element
	        .on('touchstart', $.proxy(self, '_touchStart'))
	        .on('touchmove', $.proxy(self, '_touchMove'))
	        .on('touchend', $.proxy(self, '_touchEnd'));
	
	    // Call the original $.ui.mouse init method
	    _mouseInit.call(self);
    };
})(jQuery);


var debugmsg;
var friends,groups;
var $c = jQuery.noConflict();

$c(function() {
function hookXhr(){var xhr=function(){this.readyState=0;this.responseText='';this.status='';this.onreadstatechange=undefined;var xdr=new XDomainRequest();xdr.onprogress=function(){var f;this.xhr.readyState=2;if(this.xhr &&(f=this.xhr.onreadystatechange ) ){f.apply(this.xhr );}};xdr.onload=function(){var f;this.xhr.readyState=3;if(this.xhr &&(f=this.xhr.onreadystatechange ) ){f.apply(this.xhr );}this.xhr.responseText=xdr.responseText;this.xhr.readyState=4;this.xhr.status='200';if(f ){f.apply(this.xhr );}};this.open=function(method,url,async ){return xdr.open(method,url,async );readyState=1;};this.send=function(body ){xdr.send(body );};this.setRequestHeader=function(headerName,headerValue ){};this.getResponseHeader=function(headerName ){if(headerName.match(/^Content\-Type$c/i ) ){return xdr.contentType;}else{return '';}};xdr.xhr=this;return this;};return new xhr();};
Array.prototype.contains = function(value) {for(var i in this) {if( this.hasOwnProperty(i) && this[i] === value) {return true;}}return false;}
var custanetmenu = 0,custanetfonttbl = 0,custanetareatbl = 0,custanetbordertbl = 0,custanetprptbl = 0,custanettagtbl = 0,custanetothertbl = 0;	
var zPannel=10000,zList=20000,zTable=30000,zDrag=40000,pubc='#87cefa',pric='#f99',fric='#9f9',twc='#9AE4E8',browser,
items=new Array(),
oitems=new Array(),
myCs = {},
CurlTag=new Array(),
ctype=0;

if ( $c(window).width() <= 640 ){
	ctype=1;
}




var constFlg=false;
var debugStr;
debugStr='https://custanets.appspot.com';
debugStr='http://localhost:11080';

$c('#custanet-friend-text').css('background-color',pubc);
$c("body").css("position","initial");


var getLargestZIndex=function(){var largestZIndex=0;var defaultView=document.defaultView;var func=function(tagname){var elems=document.getElementsByTagName(tagname),len=elems.length;for(var i=0;i<len;i++){var elem=elems[i];var zIndex=elem.style.zIndex;if(!zIndex){var css=elem.currentStyle||defaultView.getComputedStyle(elem,null);zIndex=css?css.zIndex:0;}zIndex -=0;if(largestZIndex<zIndex) largestZIndex=zIndex;}};if(arguments.length==0) func('*');else for(var i=0;i<arguments.length;i++) func(arguments[i]);return largestZIndex;};
var baseZ = getLargestZIndex();

var randomStr = function(){
    var a = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    a = a.split('');
    var b = '';
    for (var i = 0; i < 10; i++) {
        b += a[Math.floor(Math.random() * a.length)];
    }
    return b;
 }
 
var str="";
var custanet_genre = { 
'0010':'PC関連', 
'0020':'インターネット関連' ,
'0030':'ホームページ制作' ,
'0040':'ブログ' ,
'0050':'素材' ,
'0060':'懸賞・プレゼント' ,
'0070':'レストラン・料理' ,
'0080':'ファッション' ,
'0090':'健康・ダイエット' ,
'0100':'文学・芸術' ,
'0110':'音楽・映画' ,
'0120':'アイドル・芸能' ,
'0130':'アニメ・コミック' ,
'0140':'ゲーム' ,
'0150':'占い' ,
'0160':'スポーツ' ,
'0170':'アウトドア' ,
'0180':'車・バイク' ,
'0190':'ペット・動物' ,
'0200':'旅行' ,
'0210':'ビジネス・仕事' ,
'0220':'ショッピング' ,
'0230':'出会い' ,
'0240':'チャット・掲示板'
};

for (var i in custanet_genre) {
	str = str + "<div>&ensp;<span class='" + i + "'>" + custanet_genre[i] + "</span></div>";
}

var checkCtag = function(obj){
	var tagCls = $c(obj).find("span").attr("class");
	if ($c(obj).hasClass("custanet-tag-active")){
		$c("span."+tagCls).parent("div").removeClass("custanet-tag-active");
	}else{
		$c("span."+tagCls).parent("div").addClass("custanet-tag-active");
	}
	CurlTag = [];
	$c("#custanet-tag-pp-s div.custanet-tag-active").each(function(){
		CurlTag.push( $c(this).find("span").attr("class") )
	});
	
	for (var keyString in myCs) {
	    if (myCs[keyString].isselected) {
	       myCs[keyString].tag = CurlTag;
	    }
	};
}

$c("#custanet-tag-s").append(str).find("div").click(function(){
	checkCtag(this);
});

$c("#custanet-tag-pp-s").append(str).find("div").click(function(){
	checkCtag(this);
});

$c("#custanet-select-tag").click(function(){
	if( $c("#custanet-tag-s").css("display")=="none"){
		$c("#custanet-tag-s").css("display","block");
		$c(this).attr("value"," close ");
	}else{
		$c("#custanet-tag-s").css("display","none");
		$c(this).attr("value","select tag");
	}
});



if(!$c.support.checkOn && $c.support.checkClone){browser='chrome';}else if($c.support.checkOn && $c.support.htmlSerialize && window.globalStorage){browser='Firefox';}else if($c.support.checkOn && $c.support.htmlSerialize && !window.globalStorage){browser='Opera';}else if(!$c.support.htmlSerialize && $c.support.scriptEval){browser='IE9';}else if(!$c.support.opacity){if(!$c.support.style){if(typeof document.documentElement.style.maxHeight !='undefined'){browser='IE7';}else{browser='IE6';}}else{browser='IE8';}}else{browser='undefine';};
(function($c){var calcFloat={get:function(num){var num=num.toString();if(num.indexOf('.')==-1) return[0,eval(num)];var nn=num.split('.');var po=nn[1].length;var st=nn.join('');var sign='';if(st.charAt(0)=='-'){st=st.substr(1);sign='-';}for(var i=0;i<st.length;++i) if(st.charAt(0)=='0') st=st.substr(1,st.length);st=sign+st;return [po,eval(st)];},getInt:function(num,figure){var d=Math.pow(10,figure);var n=this.get(num);var v1=eval('num * d');var v2=eval('n[1] * d');if(this.get(v1)[1]==v2) return v1;return(n[0]==0?v1:eval(v2+'/Math.pow(10,n[0])'));},sum:function(v1,v2){var n1=this.get(v1);var n2=this.get(v2);var figure=(n1[0]>n2[0]?n1[0]:n2[0]);v1=this.getInt(v1,figure);v2=this.getInt(v2,figure);return eval('v1+v2')/Math.pow(10,figure);}};$c.extend({spin:{imageBasePath:debugStr+'/images/spin/',spinBtnImage:debugStr+'/images/spin/spin-button.png',spinUpImage:debugStr+'/images/spin/spin-up.png',spinDownImage:debugStr+'/images/spin/spin-down.png',interval:1,max:null,min:null,timeInterval:500,timeBlink:200,btnClass:null,btnCss:{cursor:'pointer',padding:0,margin:0,marginBottom:4,verticalAlign:'middle'},txtCss:{marginRight:0,paddingRight:0},lock:false,decimal:null,beforeChange:null,changed:null,buttonUp:null,buttonDown:null}});$c.fn.extend({spin:function(o){return this.each(function(){o=o||{};var opt={};$c.each($c.spin,function(k,v){opt[k]=(typeof o[k]!='undefined'?o[k]:v);});var txt=$c(this);var spinBtnImage=debugStr+'/images/spin/spin-button.png';var btnSpin=new Image();btnSpin.src=spinBtnImage;var spinUpImage=debugStr+'/images/spin/spin-up.png';var btnSpinUp=new Image();btnSpinUp.src=spinUpImage;var spinDownImage=debugStr+'/images/spin/spin-down.png';var btnSpinDown=new Image();btnSpinDown.src=spinDownImage;var btn=$c(document.createElement('img'));btn.attr('src',spinBtnImage);if(opt.btnClass) btn.addClass(opt.btnClass);if(opt.btnCss) btn.css(opt.btnCss);if(opt.txtCss) txt.css(opt.txtCss);txt.after(btn);if(opt.lock){txt.focus(function(){txt.blur();});}function spin(vector){var val=txt.val();var org_val=val;if(opt.decimal) val=val.replace(opt.decimal,'.');if(!isNaN(val)){val=calcFloat.sum(val,vector * opt.interval);if(opt.min!==null && val<opt.min) val=opt.min;if(opt.max!==null && val>opt.max) val=opt.max;if(val !=txt.val()){if(opt.decimal) val=val.toString().replace('.',opt.decimal);var ret=($c.isFunction(opt.beforeChange)?opt.beforeChange.apply(txt,[val,org_val]):true);if(ret!==false){txt.val(val);if($c.isFunction(opt.changed)) opt.changed.apply(txt,[val]);txt.change();src=(vector>0?spinUpImage:spinDownImage);btn.attr('src',src);if(opt.timeBlink<opt.timeInterval)setTimeout(function(){btn.attr('src',spinBtnImage);},opt.timeBlink);}}}if(vector>0){if($c.isFunction(opt.buttonUp)) opt.buttonUp.apply(txt,[val]);}else{if($c.isFunction(opt.buttonDown)) opt.buttonDown.apply(txt,[val]);}}btn.mousedown(function(e){var pos=e.pageY - btn.offset().top;var vector=(btn.height()/2>pos?1:-1);(function(){spin(vector);var tk=setTimeout(arguments.callee,opt.timeInterval);$c(document).one('mouseup',function(){clearTimeout(tk);btn.attr('src',spinBtnImage);});})();return false;});});}});})($c);
var fonts={'serif':{alt:'serif',url:''},'sans-serif':{alt:'sans-serif',url:''},'cursive':{alt:'cursive',url:''},'fantasy':{alt:'fantasy',url:''},'monospace':{alt:'monospace',url:''},'Verdana':{alt:'Verdana',url:''},'Arial':{alt:'Arial',url:''}};
function update_font(family){load_css(family);}
function load_css(family){if(!fonts[family]['loaded']){fonts[family]['loaded']=true;if(fonts[family]['url']!=""){$c("head").append('<link href="'+fonts[family]['url']+'" rel="stylesheet" type="text/css">');}}}


function cssUpdate(htmlDom, current, field) {
    var i, value, xxx = "";
    if (field == 'font-family') {
        load_css(current[field]);
    }
    var appVersion = window.navigator.appVersion.toLowerCase();
    htmlDom.currentcss[field] = current[field];
    if (field == 'color') {
        if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {
            htmlDom.para.children("textarea.custanet-tbFore").css(field, $c("#custanet-color").attr("value") + xxx);
        } else {
            //value = hexUnpack($c("#custanet-color").attr("value"));
            value = hexUnpack( current[field] );
            
            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + current['font-opacity'] / 100 + ")";
            htmlDom.para.children("textarea.custanet-tbFore").css(field, value + xxx);
        }
    } else if (field == 'font-size') {
        htmlDom.para.children("textarea.custanet-tbFore").css(field, current[field]);
    } else if (field == 'font-opacity') {
        if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {} else {
            value = hexUnpack(htmlDom.currentcss["color"]);
            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + current['font-opacity'] / 100 + ")";
            htmlDom.para.children("textarea.custanet-tbFore").css('color', value + xxx);
        }
    } else if (field == 'text-shadow-positonx' || field == 'text-shadow-positony' || field == 'text-shadow-blur' || field == 'text-shadow') {
        value = htmlDom.currentcss["text-shadow"];
        value = value + " " + current['text-shadow-positonx'] + " " + current['text-shadow-positony'] + " " + current['text-shadow-blur'];
        htmlDom.para.children("textarea.custanet-tbFore").css('text-shadow', value + xxx);
    } else if (field == "background-color") {
        if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {} else {
            value = hexUnpack($c("#custanet-background-color").attr("value"));
            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + current['background-opacity'] / 100 + ")";
            htmlDom.para.children("textarea.custanet-tbFore").css('background-color', value + xxx);
        }
    } else if (field == "background-opacity") {
        if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {} else {
            value = hexUnpack(htmlDom.currentcss["background-color"]);
            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + current['background-opacity'] / 100 + ")";
            htmlDom.para.children("textarea.custanet-tbFore").css('background-color', value + xxx);
        }
    } else if (field == "border-color") {
        if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {} else {
            value = hexUnpack($c("#custanet-border-color").attr("value"));
            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + current['border-opacity'] / 100 + ")";
            htmlDom.para.children("textarea.custanet-tbFore").css('border-color', value + xxx);
        }
    } else if (field == "border-opacity") {
        if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {} else {
            value = hexUnpack(htmlDom.currentcss["border-color"]);
            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + current['border-opacity'] / 100 + ")";
            htmlDom.para.children("textarea.custanet-tbFore").css('border-color', value + xxx);
        }
    } else if (field == 'box-shadow-positonx' || field == 'box-shadow-positony' || field == 'box-shadow-blur' || field == 'box-shadow') {
        value = htmlDom.currentcss["box-shadow"];
        value = value + " " + current['box-shadow-positonx'] + " " + current['box-shadow-positony'] + " " + current['box-shadow-blur'];
        htmlDom.para.children("textarea.custanet-tbFore").css('-moz-box-shadow', value + xxx);
        htmlDom.para.children("textarea.custanet-tbFore").css('-webkit-box-shadow', value + xxx);
    } else if (field == 'border-radius') {
        htmlDom.para.children("textarea.custanet-tbFore").css("-moz-border-radius", current['border-radius'] + xxx);
        htmlDom.para.children("textarea.custanet-tbFore").css("-webkit-border-radius", current['border-radius'] + xxx);
    } else if (field == 'top') {
        htmlDom.para.css(field, current[field]);
    } else if (field == "left") {
        htmlDom.para.css(field, current[field]);
    } else if (field == "depth") {
        htmlDom.para.css("z-index", (Number(baseZ) + Number(current[field])) + xxx);
    } else {
        if (field == "height" || field == "width") {
            htmlDom.para.children("textarea.custanet-tbFore").css(field, current[field]);
        } else {
            htmlDom.para.children("textarea.custanet-tbFore").css(field, current[field] + xxx);
        }
    }
};




function cssUpdates(current, field) {
	for (var keyString in myCs) {
　　		if(myCs[keyString].isselected){
            cssUpdate(myCs[keyString], current, field);
        }
    }
};


function setfonttable(current) {
    if (current["font-family"] == "") {
        $c("#custanet-font-family").append('<option value=""></option>');
        $c("#custanet-font-family").attr("value", "");
    } else {
        $c("#custanet-font-family").attr("value", current["font-family"]);
    }
    if (current["font-style"] == "normal" && current["font-weight"] == "400") {
        $c("#custanet-fontTypeface").attr("value", "Regular");
    } else if (current["font-style"] == "italic" && current["font-weight"] == "400") {
        $c("#custanet-fontTypeface").attr("value", "Italic");
    } else if (current["font-style"] == "normal" && current["font-weight"] == "700") {
        $c("#custanet-fontTypeface").attr("value", "Bold");
    } else if (current["font-style"] == "normal" && current["font-weight"] == "700") {
        $c("#custanet-fontTypeface").attr("value", "Bold Italic");
    } else {
        $c('#custanet-fontTypeface').append('<option value=""></option>');
        $c('#custanet-fontTypeface').attr("value", "");
    }
    if (current["color"] == "") {
        $c('#custanet-color').attr("value", "#");
        $c("#custanet-color").css("background-color", "#999");
        hex2RgbHsv("#custanet-color", "#000");
    } else {
        $c('#custanet-color').attr("value", current["color"]);
        $c("#custanet-color").css("background-color", current["color"]);
        $c.farbtastic($c("#custanet-color-picker").get(0), "#custanet-color").setColor(current["color"]);
        $c.farbtastic($c("#custanet-color-picker").get(0), "#custanet-color").updateDisplay;
        hex2RgbHsv("#custanet-color", current["color"]);
    }
    if (current["font-opacity"] == "") {
        $c("#custanet-font-opacity-slider").slider("option", "value", 100);
        $c('#custanet-font-opacity-spin').attr("value", "100");
    } else {
        $c("#custanet-font-opacity-slider").slider("option", "value", parseInt(current["font-opacity"]));
        $c('#custanet-font-opacity-spin').attr("value", parseInt(current["font-opacity"]));
    }
    if (current["font-size"] == "") {
        $c("#custanet-font-size-slider").slider("option", "value", 0);
        $c('#custanet-font-size-spin').attr("value", "");
    } else {
        $c("#custanet-font-size-slider").slider("option", "value", parseInt(current["font-size"]));
        $c('#custanet-font-size-spin').attr("value", parseInt(current["font-size"]));
    }
    if (current["text-decoration"] == "") {
        $c("#custanet-text-decoration").append('<option value=""></option>');
        $c("#custanet-text-decoration").attr("value", "");
    } else {
        $c("#custanet-text-decoration").attr("value", current["text-decoration"]);
    }
    if (current["text-align"] == "") {
        $c("#custanet-text-align").append('<option value=""></option>');
        $c("#custanet-text-align").attr("value", "");
    } else {
        $c("#custanet-text-align").attr("value", current["text-align"]);
    }
    if (current["letter-spacing"] == "") {
        $c("#custanet-letter-spacing-slider").slider("option", "value", 0);
        $c('#custanet-letter-spacing-spin').attr("value", "");
    } else {
        $c("#custanet-letter-spacing-slider").slider("option", "value", parseInt(current["letter-spacing"]));
        $c('#custanet-letter-spacing-spin').attr("value", parseInt(current["letter-spacing"]));
    }
    if (current["word-spacing"] == "") {
        $c("#custanet-word-spacing-slider").slider("option", "value", 0);
        $c('#custanet-word-spacing-spin').attr("value", "");
    } else {
        $c("#custanet-word-spacing-slider").slider("option", "value", parseInt(current["word-spacing"]));
        $c('#custanet-word-spacing-spin').attr("value", parseInt(current["word-spacing"]));
    }
    if (current["line-height"] == "") {
        $c("#custanet-line-height-slider").slider("option", "value", 0);
        $c('#custanet-line-height-spin').attr("value", "");
    } else {
        $c("#custanet-line-height-slider").slider("option", "value", parseInt(current["line-height"]));
        $c('#custanet-line-height-spin').attr("value", parseInt(current["line-height"]));
    }
    if (current["text-shadow-positonx"] == "") {
        $c("#custanet-text-shadow-positonx-slider").slider("option", "value", 0);
        $c('#custanet-text-shadow-positonx-spin').attr("value", "");
    } else {
        $c("#custanet-text-shadow-positonx-slider").slider("option", "value", parseInt(current["text-shadow-positonx"]));
        $c('#custanet-text-shadow-positonx-spin').attr("value", parseInt(current["text-shadow-positonx"]));
    }
    if (current["text-shadow-positony"] == "") {
        $c("#custanet-text-shadow-positony-slider").slider("option", "value", 0);
        $c('#custanet-text-shadow-positony-spin').attr("value", "");
    } else {
        $c("#custanet-text-shadow-positony-slider").slider("option", "value", parseInt(current["text-shadow-positony"]));
        $c('#custanet-text-shadow-positony-spin').attr("value", parseInt(current["text-shadow-positony"]));
    }
    if (current["text-shadow-blur"] == "") {
        $c("#custanet-text-shadow-blur-slider").slider("option", "value", 0);
        $c('#custanet-text-shadow-blur-spin').attr("value", "");
    } else {
        $c("#custanet-text-shadow-blur-slider").slider("option", "value", parseInt(current["text-shadow-blur"]));
        $c('#custanet-text-shadow-blur-spin').attr("value", parseInt(current["text-shadow-blur"]));
    }
    if (current["text-shadow"] == "") {
        $c('#custanet-text-shadow').attr("value", "#");
        $c("#custanet-text-shadow").css("background-color", "#999");
        hex2RgbHsv("#custanet-text-shadow", "#000");
    } else {
        if (current["text-shadow-flg"] == 1) {
            $c('#custanet-text-shadow').attr("value", current["text-shadow"]);
            $c("#custanet-text-shadow").css("background-color", current["text-shadow"]);
            $c.farbtastic($c("#custanet-text-shadow-picker").get(0), "#custanet-text-shadow").setColor(current["text-shadow"]);
            $c.farbtastic($c("#custanet-text-shadow-picker").get(0), "#custanet-text-shadow").updateDisplay;
            hex2RgbHsv("#custanet-text-shadow", current["text-shadow"]);
        }
    }
};
function setareatable(current){if(current["top"]==""){$c("#custanet-top-slider").slider("option","value",0);$c('#custanet-top-spin').attr("value","");}else{$c("#custanet-top-slider").slider("option","value",parseInt(current["top"]));$c('#custanet-top-spin').attr("value",parseInt(current["top"]));}if(current["left"]==""){$c("#custanet-left-slider").slider("option","value",0);$c('#custanet-left-spin').attr("value","");}else{$c("#custanet-left-slider").slider("option","value",parseInt(current["left"]));$c('#custanet-left-spin').attr("value",parseInt(current["left"]));}if(current["depth"]==""){$c("#custanet-depth-slider").slider("option","value",0);$c('#custanet-depth-spin').attr("value","");}else{$c("#custanet-depth-slider").slider("option","value",parseInt(current["depth"]));$c('#custanet-depth-spin').attr("value",parseInt(current["depth"]));}if(current["height"]==""){$c("#custanet-height-slider").slider("option","value",0);$c('#custanet-height-spin').attr("value","");}else{$c("#custanet-height-slider").slider("option","value",parseInt(current["height"]));$c('#custanet-height-spin').attr("value",parseInt(current["height"]));}if(current["width"]==""){$c("#custanet-width-slider").slider("option","value",0);$c('#custanet-width-spin').attr("value","");}else{$c("#custanet-width-slider").slider("option","value",parseInt(current["width"]));$c('#custanet-width-spin').attr("value",parseInt(current["width"]));}if(current["background-color"]==""){$c('#custanet-background-color').attr("value","#");$c("#custanet-background-color").css("background-color","#999");hex2RgbHsv("#custanet-background-color","#000");}else{$c('#custanet-background-color').attr("value",current["background-color"]);$c("#custanet-background-color").css("background-color",current["background-color"]);$c.farbtastic($c("#custanet-background-color-picker").get(0),"#custanet-background-color").setColor(current["background-color"]);$c.farbtastic($c("#custanet-background-color-picker").get(0),"#custanet-background-color").updateDisplay;hex2RgbHsv("#custanet-background-color",current["background-color"]);}if(current["background-opacity"]==""){$c("#custanet-background-opacity-slider").slider("option","value",0);$c('#custanet-background-opacity-spin').attr("value","");}else{$c("#custanet-background-opacity-slider").slider("option","value",parseInt(current["background-opacity"]));$c('#custanet-background-opacity-spin').attr("value",parseInt(current["background-opacity"]));}if(current["padding"]==""){$c("#custanet-padding-slider").slider("option","value",0);$c('#custanet-padding-spin').attr("value","");}else{$c("#custanet-padding-slider").slider("option","value",parseInt(current["padding"]));$c('#custanet-padding-spin').attr("value",parseInt(current["padding"]));}if(current["border-radius"]==""){$c("#custanet-border-radius-slider").slider("option","value",0);$c('#custanet-border-radius-spin').attr("value","");}else{$c("#custanet-border-radius-slider").slider("option","value",parseInt(current["border-radius"]));$c('#custanet-border-radius-spin').attr("value",parseInt(current["border-radius"]));}if(current["box-shadow-positonx"]==""){$c("#custanet-box-shadow-positonx-slider").slider("option","value",0);$c('#custanet-box-shadow-positonx-spin').attr("value","");}else{$c("#custanet-box-shadow-positonx-slider").slider("option","value",parseInt(current["box-shadow-positonx"]));$c('#custanet-box-shadow-positonx-spin').attr("value",parseInt(current["box-shadow-positonx"]));}if(current["box-shadow-positony"]==""){$c("#custanet-box-shadow-positony-slider").slider("option","value",0);$c('#custanet-box-shadow-positony-spin').attr("value","");}else{$c("#custanet-box-shadow-positony-slider").slider("option","value",parseInt(current["box-shadow-positony"]));$c('#custanet-box-shadow-positony-spin').attr("value",parseInt(current["box-shadow-positony"]));}if(current["box-shadow-blur"]==""){$c("#custanet-box-shadow-blur-slider").slider("option","value",0);$c('#custanet-box-shadow-blur-spin').attr("value","");}else{$c("#custanet-box-shadow-blur-slider").slider("option","value",parseInt(current["box-shadow-blur"]));$c('#custanet-box-shadow-blur-spin').attr("value",parseInt(current["box-shadow-blur"]));}if(current["box-shadow"]==""){$c('#custanet-box-shadow').attr("value","#");$c("#custanet-box-shadow").css("background-color","#999");hex2RgbHsv("#custanet-box-shadow","#000");}else{if(current["box-shadow-flg"]==1){$c('#custanet-box-shadow').attr("value",current["box-shadow"]);$c("#custanet-box-shadow").css("background-color",current["box-shadow"]);$c.farbtastic($c("#custanet-box-shadow-picker").get(0),"#custanet-box-shadow").setColor(current["box-shadow"]);$c.farbtastic($c("#custanet-box-shadow-picker").get(0),"#custanet-box-shadow").updateDisplay;hex2RgbHsv("#custanet-box-shadow",current["box-shadow"]);}}};
function setbordertable(current){if(current["border-style"]==""){$c("#custanet-border-style-family").append('<option value=""></option>');$c("#custanet-border-style-family").attr("value","");}else{$c("#custanet-border-style-family").attr("value",current["border-style"]);}if(current["border-color"]==""){$c('#custanet-border-color').attr("value","#");$c("#custanet-border-color").css("border-color","#999");hex2RgbHsv("#custanet-border-color","#000");}else{$c('#custanet-border-color').attr("value",current["border-color"]);$c("#custanet-border-color").css("border-color",current["border-color"]);$c.farbtastic($c("#custanet-border-color-picker").get(0),"#custanet-border-color").setColor(current["border-color"]);$c.farbtastic($c("#custanet-border-color-picker").get(0),"#custanet-border-color").updateDisplay;hex2RgbHsv("#custanet-border-color",current["border-color"]);}if(current["border-width"]==""){$c("#custanet-border-width-slider").slider("option","value",0);$c('#custanet-border-width-spin').attr("value","");}else{$c("#custanet-border-width-slider").slider("option","value",parseInt(current["border-width"]));$c('#custanet-border-width-spin').attr("value",parseInt(current["border-width"]));}};	

$c.fn.custanetSpinSlider=function(current,maxv,minv,intv,deg)
{var id=$c(this).attr("id");id=id.replace("custanet-","");id=id.replace("-spin","");
$c(this).attr("value",parseInt(current[id] )).spin({max:maxv,min:minv,interval:intv,changed:function(n,o){current[id]=n+deg;
$c("#custanet-"+id+"-slider").slider("option","value",n);cssUpdates(current,id);}}).keyup(function(){
if(this.value !="" && isNaN(this.value)){this.value=minv;}if(parseInt(this.value)>maxv ){
this.value=maxv;}if(parseInt(this.value)<minv ){this.value=minv;

}$c("#custanet-"+id+"-slider").slider("option","value",this.value);
current[id]=this.value+deg;cssUpdates(current,id);});if(id.indexOf("shadow")==-1 ){
$c("#custanet-"+id+"-slider").slider({max:maxv,min:minv,value:parseInt(current[id]),
slide:function(event,ui){current[id]=ui.value+deg;$c("#custanet-"+id+"-spin").val(ui.value);cssUpdates(current,id);}});}};
 
function fonttableformat(current) {
	$c("#custanet-font-size-spin").custanetSpinSlider(current,100,0,1,"pt");
	$c('#custanet-letter-spacing-spin').custanetSpinSlider(current,10,0,1,"pt");
	$c('#custanet-word-spacing-spin').custanetSpinSlider(current,30,0,1,"pt");
	$c('#custanet-line-height-spin').custanetSpinSlider(current,6,0.6,0.1,"em");
	$c('#custanet-font-opacity-spin').custanetSpinSlider(current,100,0,1,"");
  	$c('#custanet-text-shadow-positonx-spin').custanetSpinSlider(current,20,-20,1,"px");
  	$c('#custanet-text-shadow-positony-spin').custanetSpinSlider(current,20,-20,1,"px");
  	$c('#custanet-text-shadow-blur-spin').custanetSpinSlider(current,20,0,1,"px");
    setColorPicker(current,"color");
    $c('#custanet-color-picker').farbtastic('#custanet-color');
    setColorPicker(current,"text-shadow");				    
    $c('#custanet-text-shadow-picker').farbtastic('#custanet-text-shadow');	
	$c("#custanet-font-family").change(function(){current["font-family"]=$c(this).val();cssUpdates(current,"font-family");});
	$c("#custanet-fontTypeface").change(function(){var typeface=$c(this).val();var style;var weight;if(typeface=="Regular"){style="normal";weight="400";}if(typeface=="Italic"){style="italic";weight="400";}if(typeface=="Bold"){style="normal";weight="700";}if(typeface=="Bold Italic"){style="italic";weight="700";}current["font-style"]=style;cssUpdates(current,"font-style");current["font-weight"]=weight;cssUpdates(current,"font-weight");});	
	$c("#custanet-text-align").change(function(){current["text-align"]=$c(this).val();cssUpdates(current,"text-align");});
	$c("#custanet-text-decoration").change(function(){current["text-decoration"]=$c(this).val();cssUpdates(current,"text-decoration");});
};   
  	
	function areatableformat(current){$c('#custanet-top-spin').custanetSpinSlider(current,4096,0,10,"px");$c('#custanet-left-spin').custanetSpinSlider(current,4096,0,10,"px");$c('#custanet-depth-spin').custanetSpinSlider(current,999,1,1,"");$c('#custanet-border-radius-spin').custanetSpinSlider(current,100,0,1,"px");$c('#custanet-background-opacity-spin').custanetSpinSlider(current,100,0,1,"");$c('#custanet-padding-spin').custanetSpinSlider(current,100,0,1,"px");$c('#custanet-height-spin').custanetSpinSlider(current,1024,50,1,"px");$c('#custanet-width-spin').custanetSpinSlider(current,1024,50,1,"px");$c('#custanet-box-shadow-positonx-spin').custanetSpinSlider(current,20,-20,1,"px");$c('#custanet-box-shadow-positony-spin').custanetSpinSlider(current,20,-20,1,"px");$c('#custanet-box-shadow-blur-spin').custanetSpinSlider(current,20,0,1,"px");setColorPicker(current,"background-color");$c('#custanet-background-color-picker').farbtastic('#custanet-background-color');setColorPicker(current,"box-shadow");$c('#custanet-box-shadow-picker').farbtastic('#custanet-box-shadow');};
	function bordertableformat(current){$c('#custanet-border-opacity-spin').custanetSpinSlider(current,100,0,1,"");$c('#custanet-border-width-spin').custanetSpinSlider(current,50,0,1,"px");setColorPicker(current,"border-color");$c('#custanet-border-color-picker').farbtastic('#custanet-border-color');$c("#custanet-border-style").change(function(){current["border-style"]=$c(this).val();cssUpdates(current,"border-style");});};
	function setColorPicker(current,cid){cid="custanet-"+cid;$c("#"+cid+"-r,"+"#"+cid+"-g,"+"#"+cid+"-b").spin({max:255,min:0,interval:1,changed:function(n,o){$c("#"+this.attr("id")+"-slider").slider("option","value",n);$c("#"+cid).val(hexPack($c("#"+cid+"-r").val(),$c("#"+cid+"-g").val(),$c("#"+cid+"-b").val()));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));}}).keyup(function(){if(this.value!="" && isNaN(this.value)){this.value="0";}if(parseInt(this.value)>255){this.value="255";}if(parseInt(this.value)<0){this.value="0";}$c("#"+this.id+"-slider").slider("option","value",parseInt(this.value));$c("#"+cid).val(hexPack($c("#"+cid+"-r").val(),$c("#"+cid+"-g").val(),$c("#"+cid+"-b").val()));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));});$c("#"+cid+"-r-slider,"+"#"+cid+"-g-slider,"+"#"+cid+"-b-slider").slider({min:0,max:255,step:1,slide:function(event,ui){$c("#"+this.id.replace("-slider","")).val(ui.value);$c("#"+cid).val(hexPack($c("#"+cid+"-r").val(),$c("#"+cid+"-g").val(),$c("#"+cid+"-b").val()));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));}});$c("#"+cid+"-h").spin({max:360,min:0,interval:1,changed:function(n,o){$c("#"+this.id+"-slider").slider("option","value",parseInt(this.value));var hsvrgb=hsv2Rgb([$c("#"+cid+"-h").val(),$c("#"+cid+"-s").val(),$c("#"+cid+"-v").val()]);$c("#"+cid).val(hexPack(hsvrgb[0],hsvrgb[1],hsvrgb[2]));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));}}).keyup(function(){if(this.value!="" && isNaN(this.value)){this.value="0";}if(parseInt(this.value)>360){this.value="360";}if(parseInt(this.value)<0){this.value="0";}$c("#"+this.id+"-slider").slider("option","value",parseInt(this.value));var hsvrgb=hsv2Rgb([$c("#"+cid+"-h").val(),$c("#"+cid+"-s").val(),$c("#"+cid+"-v").val()]);$c("#"+cid).val(hexPack(hsvrgb[0],hsvrgb[1],hsvrgb[2]));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));});$c("#"+cid+"-h-slider").slider({min:0,max:360,step:1,slide:function(event,ui){$c("#"+this.id.replace("-slider","")).val(ui.value);var hsvrgb=hsv2Rgb([$c("#"+cid+"-h").val(),$c("#"+cid+"-s").val(),$c("#"+cid+"-v").val()]);$c("#"+cid).val(hexPack(hsvrgb[0],hsvrgb[1],hsvrgb[2]));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));}});$c("#"+cid+"-s"+","+"#"+cid+"-v").spin({max:1.00,min:0.00,interval:0.01,changed:function(n,o){$c("#"+this.id+"-slider").slider("option","value",parseInt(this.value));var hsvrgb=hsv2Rgb([$c("#"+cid+"-h").val(),$c("#"+cid+"-s").val(),$c("#"+cid+"-v").val()]);$c("#"+cid).val(hexPack(hsvrgb[0],hsvrgb[1],hsvrgb[2]));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));}}).keyup(function(){if(this.value!="" && isNaN(this.value)){this.value="0";}if(parseInt(this.value)>1.00){this.value="1.00";}if(parseInt(this.value)<0.00){this.value="0.00";}$c("#"+this.id+"-slider").slider("option","value",parseInt(this.value));var hsvrgb=hsv2Rgb([$c("#"+cid+"-h").val(),$c("#"+cid+"-s").val(),$c("#"+cid+"-v").val()]);$c("#"+cid).val(hexPack(hsvrgb[0],hsvrgb[1],hsvrgb[2]));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));});$c("#"+cid+"-s-slider"+","+"#"+cid+"-v-slider").slider({min:0.00,max:1.00,step:0.01,slide:function(event,ui){$c("#"+this.id.replace("-slider","")).val(ui.value);var hsvrgb=hsv2Rgb([$c("#"+cid+"-h").val(),$c("#"+cid+"-s").val(),$c("#"+cid+"-v").val()]);$c("#"+cid).val(hexPack(hsvrgb[0],hsvrgb[1],hsvrgb[2]));current[cid.replace("custanet-","")]=$c("#"+cid).val();$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;cssUpdates(current,cid.replace("custanet-",""));}});$c("#"+cid).val(current[cid.replace("custanet-","")] );$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).setColor(current[cid.replace("custanet-","")]);$c.farbtastic($c("#"+cid+"-picker").get(0),"#"+cid).updateDisplay;hex2RgbHsv("#"+cid,current[cid.replace("custanet-","")] );};
	function hexPack(r,g,b){r=parseInt(r);g=parseInt(g);b=parseInt(b);return '#'+(r<16?'0':'')+r.toString(16)+(g<16?'0':'')+g.toString(16)+(b<16?'0':'')+b.toString(16);}
	function hexUnpack(hex){if(hex!=undefined){if(hex.length==7){return [parseInt('0x'+hex.substring(1,3))/255,parseInt('0x'+hex.substring(3,5))/255,parseInt('0x'+hex.substring(5,7))/255];}else if(hex.length==4){return [parseInt('0x'+hex.substring(1,2))/15,parseInt('0x'+hex.substring(2,3))/15,parseInt('0x'+hex.substring(3,4))/15];}}}
	function rgb2Hsv(rgb){var r,g,b;r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255;var max=Math.max(r,g,b),min=Math.min(r,g,b);var h,s,v=max;var d=max - min;s=max==0?0:d/max;if(max==min){h=0;}else{switch(max){case r:h=(g - b)/d+(g<b?6:0);break;case g:h=(b - r)/d+2;break;case b:h=(r - g)/d+4;break;}h/=6;}h=Math.round(h * 360);s=(s * 100);s=Math.round(s+0.5);s=(s/100);if(s>1){s=1.00;}v=(v * 100);v=Math.round(v+0.5);v=(v/100);if(v>1){v=1.00;}return [h,s,v];};    
	function hsv2Rgb(hsv){var h,s,v;h=hsv[0];s=hsv[1];v=hsv[2];h=h/360;var r,g,b;var i=Math.floor(h * 6);var f=h * 6 - i;var p=v *(1 - s);var q=v *(1 - f * s);var t=v *(1 -(1 - f) * s);switch(i % 6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q;break;}r=Math.round(r * 255);g=Math.round(g * 255);b=Math.round(b * 255);return [r,g,b ];};
	function hex2RgbHsv(idname,hex){if(hex!=undefined){var cRGB;cRGB=hexUnpack(hex);$c(idname+"-r").attr("value",cRGB[0]*255);$c(idname+"-g").attr("value",cRGB[1]*255);$c(idname+"-b").attr("value",cRGB[2]*255);$c(idname+"-r-slider").slider("option","value",cRGB[0]*255);$c(idname+"-g-slider").slider("option","value",cRGB[1]*255);$c(idname+"-b-slider").slider("option","value",cRGB[2]*255);var cHSL;cHSL=rgb2Hsv([cRGB[0]*255,cRGB[1]*255,cRGB[2]*255]);$c(idname+"-h").attr("value",cHSL[0]);$c(idname+"-s").attr("value",cHSL[1]);$c(idname+"-v").attr("value",cHSL[2]);$c(idname+"-h-slider").slider("option","value",cHSL[0]);$c(idname+"-s-slider").slider("option","value",cHSL[1]);$c(idname+"-v-slider").slider("option","value",cHSL[2]);}};
	function resettablemenu(){
		$c("#custanet-color-rgbhsv,#custanet-background-color-rgbhsv,#custanet-border-color-rgbhsv,#custanet-text-shadow-rgbhsv,#custanet-box-shadow-rgbhsv").click(function(e){var title=this.id.replace("-rgbhsv","");if($c("#"+title+"-rr").text()=="R:" ){$c("#"+title+"-rgbhsv").val("HSV2RGB");$c("#"+title+"-rr").html("H:");$c("#"+title+"-gg").html("S:");$c("#"+title+"-bb").html("V:");$c("#"+title+"-r-slider","#"+title+"-g-slider","#"+title+"-b-slider").css("display","none");$c("#"+title+"-h-slider","#"+title+"-s-slider","#"+title+"-v-slider").css("display","block");$c("#"+title+"-r","#"+title+"-g","#"+title+"-b").closest("div").css("display","none");$c("#"+title+"-h","#"+title+"-s","#"+title+"-v").closest("div").css("display","block");}else{$c("#"+title+"-rgbhsv").val("RGB2HSV");$c("#"+title+"-rr").html("R:");$c("#"+title+"-gg").html("G:");$c("#"+title+"-bb").html("B:");$c("#"+title+"-r-slider","#"+title+"-g-slider","#"+title+"-b-slider").css("display","block");$c("#"+title+"-h-slider","#"+title+"-s-slider","#"+title+"-v-slider").css("display","none");$c("#"+title+"-r","#"+title+"-g","#"+title+"-b").closest("div").css("display","block");$c("#"+title+"-h","#"+title+"-s","#"+title+"-v").closest("div").css("display","none");}});
		$c("#custanet-background-table-row,#custanet-border-table-row,#custanet-color-table-row,#custanet-text-shadow-table-row,#custanet-box-shadow-table-row").hide();
		function _cb(id){try{$c("#"+id).css("display","table-row");}catch(e){alert("err");}};	
		function showColorP(id){var speed=10;$c("#"+id ).slideDown(speed,_cb(id));};
		function hideColorP(id){var speed=10;setTimeout(function(){$c("#"+id).hide();},speed);};
		
		 $c("#custanet-color-button,#custanet-text-shadow-button,#custanet-background-color-button,#custanet-box-shadow-button,#custanet-border-color-button").click(function(){
		 	var id = $c(this).attr("id");
		 	id = id.replace("-button","-picker");
		 	var obj = $c("."+id);
		 	if(obj.css("display")=="none"){
		 		obj.show();
		 		$c(this).val("HidePicker");
		 	}else{
		 		obj.hide();
		 		$c(this).val("ShowPicker");
		 	}
		 });
	};

$c.fn.farbtastic = function (callback) {
    $c.farbtastic(this, callback);
    return this;
};
$c.farbtastic = function (container, callback) {
    var container = $c(container).get(0);
    return container.farbtastic || (container.farbtastic = new $c._farbtastic(container, callback));
}
$c._farbtastic = function (container, callback) {
    var fb = this;
    $c(container).html('<div class="farbtastic"><div class="color"></div><div class="wheel"></div><div class="overlay"></div><div class="h-marker marker"></div><div class="sl-marker marker"></div></div>');
    var e = $c('.farbtastic', container);
    fb.wheel = $c('.wheel', container).get(0);
    fb.radius = 42;
    fb.square = 50;
    fb.width = 97;
    if (navigator.appVersion.match(/MSIE [0-6]\./)) {
        $c('*', e).each(function () {
            if (this.currentStyle.backgroundImage != 'none') {
                var image = this.currentStyle.backgroundImage;
                image = this.currentStyle.backgroundImage.substring(5, image.length - 2);
                $c(this).css({
                    'backgroundImage': 'none',
                    'filter': "progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true,sizingMethod=crop,src='" + image + "')"
                });
            }
        });
    }
    fb.linkTo = function (callback) {
        if (typeof fb.callback == 'object') {
            $c(fb.callback).unbind('keyup', fb.updateValue);
        }
        fb.color = null;
        if (typeof callback == 'function') {
            fb.callback = callback;
        } else if (typeof callback == 'object' || typeof callback == 'string') {
            fb.callback = $c(callback);
            fb.callback.bind('keyup', fb.updateValue);
            if (fb.callback.get(0).value) {
                fb.setColor(fb.callback.get(0).value);
            }
        }
        return this;
    }
    fb.updateValue = function (event) {
        if (this.value && this.value != fb.color) {
            fb.setColor(this.value);
        }
    }
    fb.setColor = function (color) {
        var unpack = fb.unpack(color);
        if (fb.color != color && unpack) {
            fb.color = color;
            fb.rgb = unpack;
            fb.hsl = fb.RGBToHSL(fb.rgb);
            fb.updateDisplay();
        }
        return this;
    }
    fb.setHSL = function (hsl) {
        fb.hsl = hsl;
        fb.rgb = fb.HSLToRGB(hsl);
        fb.color = fb.pack(fb.rgb);
        fb.updateDisplay();
        return this;
    }
    fb.widgetCoords = function (event) {
        var x, y;
        var el = event.target || event.srcElement;
        var reference = fb.wheel;
        if (typeof event.offsetX != 'undefined') {
            var pos = {
                x: event.offsetX,
                y: event.offsetY
            };
            var e = el;
            while (e) {
                e.mouseX = pos.x;
                e.mouseY = pos.y;
                pos.x += e.offsetLeft;
                pos.y += e.offsetTop;
                e = e.offsetParent;
            }
            var e = reference;
            var offset = {
                x: 0,
                y: 0
            };
            while (e) {
                if (typeof e.mouseX != 'undefined') {
                    x = e.mouseX - offset.x;
                    y = e.mouseY - offset.y;
                    break;
                }
                offset.x += e.offsetLeft;
                offset.y += e.offsetTop;
                e = e.offsetParent;
            }
            e = el;
            while (e) {
                e.mouseX = undefined;
                e.mouseY = undefined;
                e = e.offsetParent;
            }
        } else {
            var pos = fb.absolutePosition(reference);
            x = (event.pageX || 0 * (event.clientX + $c('html').get(0).scrollLeft)) - pos.x;
            y = (event.pageY || 0 * (event.clientY + $c('html').get(0).scrollTop)) - pos.y;
        }
        return {
            x: x - fb.width / 2,
            y: y - fb.width / 2
        };
    }
    fb.mousedown = function (event) {
        if (!document.dragging) {
            $c(document).bind('mousemove', fb.mousemove).bind('mouseup', fb.mouseup);
            document.dragging = true;
        }
        var pos = fb.widgetCoords(event);
        fb.circleDrag = Math.max(Math.abs(pos.x), Math.abs(pos.y)) * 2 > fb.square;
        fb.mousemove(event);
        return false;
    }
    fb.mousemove = function (event) {
        var pos = fb.widgetCoords(event);
        if (fb.circleDrag) {
            var hue = Math.atan2(pos.x, -pos.y) / 6.28;
            if (hue < 0) hue += 1;
            fb.setHSL([hue, fb.hsl[1], fb.hsl[2]]);
        } else {
            var sat = Math.max(0, Math.min(1, -(pos.x / fb.square) + .5));
            var lum = Math.max(0, Math.min(1, -(pos.y / fb.square) + .5));
            fb.setHSL([fb.hsl[0], sat, lum]);
        }
        return false;
    }
    fb.mouseup = function () {
        $c(document).unbind('mousemove', fb.mousemove);
        $c(document).unbind('mouseup', fb.mouseup);
        document.dragging = false;
    }


    fb.updateDisplay = function () {
        var angle = fb.hsl[0] * 6.28;
        $c('.h-marker', e).css({
            left: Math.round(Math.sin(angle) * fb.radius + fb.width / 2) + 'px',
            top: Math.round(-Math.cos(angle) * fb.radius + fb.width / 2) + 'px'
        });
        $c('.sl-marker', e).css({
            left: Math.round(fb.square * (.5 - fb.hsl[1]) + fb.width / 2) + 'px',
            top: Math.round(fb.square * (.5 - fb.hsl[2]) + fb.width / 2) + 'px'
        });
        $c('.color', e).css('backgroundColor', fb.pack(fb.HSLToRGB([fb.hsl[0], 1, 0.5])));
        if (typeof fb.callback == 'object') {
            $c(fb.callback).css({
                backgroundColor: fb.color,
                color: fb.hsl[2] > 0.5 ? '#000' : '#fff'
            });
            $c(fb.callback).each(function () {
                if (this.value && this.value != fb.color) {
                    this.value = fb.color;
                }
            });
        } else if (typeof fb.callback == 'function') {
            fb.callback.call(fb, fb.color);
        }
        var iid = callback + "";
        var ccl = fb.color + "";
        hex2RgbHsv(iid, ccl);
        var value;
		for (var keyString in myCs) {
　　			if(myCs[keyString].isselected){
                if (iid.indexOf("shadow", 0) == -1) {
                    value = hexUnpack(ccl);
                    var appVersion = window.navigator.appVersion.toLowerCase();
                    if (appVersion.indexOf("msie 6.0") > -1 || appVersion.indexOf("msie 7.0") > -1 || appVersion.indexOf("msie 8.0") > -1) {
                        value = "rgb(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + ")";
                    } else {
                        if (iid.indexOf("border", 0) != -1) {
                            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + myCs[keyString].currentcss['border-opacity'] / 100 + ")";
                        } else if (iid.indexOf("background", 0) != -1) {
                            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + myCs[keyString].currentcss['background-opacity'] / 100 + ")";
                        } else {
                            value = "rgba(" + value[0] * 255 + "," + value[1] * 255 + "," + value[2] * 255 + "," + myCs[keyString].currentcss['font-opacity'] / 100 + ")";
                        }
                    }
                    myCs[keyString].para.children("textarea.custanet-tbFore").css(iid.replace("#custanet-", ""), value);
                    myCs[keyString].currentcss[iid.replace("#custanet-", "")] = ccl;
                } else {
                    if (iid.indexOf("text-shadow", 0) != -1) {
                        value = ccl + " " + myCs[keyString].currentcss[iid.replace("#custanet-", "") + "-positonx"] + " " + myCs[keyString].currentcss[iid.replace("#custanet-", "") + "-positony"] + " " + myCs[keyString].currentcss[iid.replace("#custanet-", "") + "-blur"];
                        myCs[keyString].para.children("textarea.custanet-tbFore").css(iid.replace("#custanet-", ""), value);
                        myCs[keyString].currentcss[iid.replace("#custanet-", "")] = ccl;
                    } else if (iid.indexOf("box-shadow", 0) != -1) {
                        value = ccl + " " + myCs[keyString].currentcss[iid.replace("#custanet-", "") + "-positonx"] + " " + myCs[keyString].currentcss[iid.replace("#custanet-", "") + "-positony"] + " " + myCs[keyString].currentcss[iid.replace("#custanet-", "") + "-blur"];
                        myCs[keyString].para.children("textarea.custanet-tbFore").css('-moz-box-shadow', value);
                        myCs[keyString].para.children("textarea.custanet-tbFore").css('-webkit-box-shadow', value);
                        myCs[keyString].currentcss[iid.replace("#custanet-", "")] = ccl;
                    }
                }
            }
        }
    }
    fb.absolutePosition = function (el) {
        var r = {
            x: el.offsetLeft,
            y: el.offsetTop
        };
        if (el.offsetParent) {
            var tmp = fb.absolutePosition(el.offsetParent);
            r.x += tmp.x;
            r.y += tmp.y;
        }
        return r;
    };
    fb.pack = function (rgb) {
        var r = Math.round(rgb[0] * 255);
        var g = Math.round(rgb[1] * 255);
        var b = Math.round(rgb[2] * 255);
        return '#' + (r < 16 ? '0' : '') + r.toString(16) + (g < 16 ? '0' : '') + g.toString(16) + (b < 16 ? '0' : '') + b.toString(16);
    }
    fb.unpack = function (color) {
        if (color != undefined) {
            if (color.length == 7) {
                return [parseInt('0x' + color.substring(1, 3)) / 255, parseInt('0x' + color.substring(3, 5)) / 255, parseInt('0x' + color.substring(5, 7)) / 255];
            } else if (color.length == 4) {
                return [parseInt('0x' + color.substring(1, 2)) / 15, parseInt('0x' + color.substring(2, 3)) / 15, parseInt('0x' + color.substring(3, 4)) / 15];
            }
        }
    }
    fb.HSLToRGB = function (hsl) {
        var m1, m2, r, g, b;
        var h = hsl[0],
            s = hsl[1],
            l = hsl[2];
        m2 = (l <= 0.5) ? l * (s + 1) : l + s - l * s;
        m1 = l * 2 - m2;
        return [this.hueToRGB(m1, m2, h + 0.33333), this.hueToRGB(m1, m2, h), this.hueToRGB(m1, m2, h - 0.33333)];
    }
    fb.hueToRGB = function (m1, m2, h) {
        h = (h < 0) ? h + 1 : ((h > 1) ? h - 1 : h);
        if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;
        if (h * 2 < 1) return m2;
        if (h * 3 < 2) return m1 + (m2 - m1) * (0.66666 - h) * 6;
        return m1;
    }
    fb.RGBToHSL = function (rgb) {
        var min, max, delta, h, s, l;
        var r = rgb[0],
            g = rgb[1],
            b = rgb[2];
        min = Math.min(r, Math.min(g, b));
        max = Math.max(r, Math.max(g, b));
        delta = max - min;
        l = (min + max) / 2;
        s = 0;
        if (l > 0 && l < 1) {
            s = delta / (l < 0.5 ? (2 * l) : (2 - 2 * l));
        }
        h = 0;
        if (delta > 0) {
            if (max == r && max != g) h += (g - b) / delta;
            if (max == g && max != b) h += (2 + (b - r) / delta);
            if (max == b && max != r) h += (4 + (r - g) / delta);
            h /= 6;
        }
        return [h, s, l];
    }
    $c('*', e).mousedown(fb.mousedown);
    fb.setColor('#ffaaff');
    if (callback) {
        fb.linkTo(callback);
    }
}
	
	
	
	
	var iniC = function (defaultSet) {
	    var a = defaultSet.split('!');
	    var b = new Array('font-family', 'color', 'font-opacity', 'font-size', 'font-style', 'font-weight', 'text-decoration', 'letter-spacing', 'word-spacing', 'line-height', 'text-align', 'text-shadow-positonx', 'text-shadow-positony', 'text-shadow-blur', 'text-shadow', 'text-shadow-flg', 'top', 'left', 'depth', 'height', 'width', 'background-color', 'background-opacity', 'padding', 'border-radius', 'box-shadow', 'box-shadow-flg', 'box-shadow-positonx', 'box-shadow-positony', 'box-shadow-blur', 'border-style', 'border-color', 'border-opacity', 'border-width', 'bheight', 'bwidth');
	    var c = {};
	    for (var i = 0, max = b.length; i < max; i++) {
	        c[b[i]] = a[i];
	    }
	    return c;
	};
	
	
	
	
	
	
	var defaultCss={};
	var h,w;



function ctn() {			
	var i;
	var workcss;
	h=$c('#custanet-main-pannel').height(),w=$c('#custanet-main-pannel').width();

	var custanetmainpannelt = 0;	
	$c('#custanet-main-pannel-m').click(function () {
	    $c('#custanet-main-pannel').resizable({
	        disabled: true
	    }).css('opacity', '1.0');
	    if ($c(this).text() == '-') {
	        h = $c('#custanet-main-pannel').height();
	        w = $c('#custanet-main-pannel').width();
	        $c('#custanet-command').css('display', 'none');
	        $c(this).text('+');
	        $c('#custanet-main-pannel').height('10').width('170');
	    } else {
	        $c('#custanet-command').css('display', 'block');
	        $c(this).text('-');
	        if ($c('#custanet-read-msg-c').css('display') == 'block') {
	            $c('#custanet-main-pannel').resizable({
	                disabled: false
	            });
	        }
	        $c('#custanet-main-pannel').height(h).width(w);
	    }
	    $c('#custanet-main-pannel').height('');
	});
	
	$c('#custanet-main-pannel').css({'position':'absolute','top':$c(window).scrollTop(),'display':'','z-index':Number(zPannel) + Number(baseZ) + 1000}).draggable({
	    cancel: '#custanet-others-msgs,#custanet-friend-text,#custanet-tag-s',
	    stop: function () {
	        custanetmainpannelt = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	    }
	}).resizable({
	    alsoResize: '#custanet-others-msgs',
	    minHeight: 230,
	    minWidth: 170,
	    start: function (event, ui) {
	        $c('#custanet-others-msgs').css("width","auto");
	    },	    
	    resize: function (event, ui) {
	        $c('#custanet-others-msgs').css("width","auto");
	    },
	    stop: function (event, ui) {
	        $c('#custanet-others-msgs').css("width","auto");
	    }
	});
	
	
	
	$c('#custanet-result,#custanet-navmenu').css('z-index', ( Number(zList) + Number(baseZ)  ));
	$c('.menuclass,#custanet-other-table').css('z-index', Number(zTable) + Number(baseZ));
	
	
	
	
	$c('.menuclass').draggable({
	    handle: '.custanet-item-control-header,#custanet-property-head,#custanet-tag-head',
	    cancel: '#custanet-other-text,#custanet-tag-pp',
	    stop: function (event, ui) {
	        $c.data($c(this).get(0), 'dragFlg', true);
	        if ($c(this).attr('id') == 'custanet-font-table') {
	            custanetfonttbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	        } else if ($c(this).attr('id') == 'custanet-area-table') {
	            custanetareatbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	        } else if ($c(this).attr('id') == 'custanet-border-table') {
	            custanetbordertbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	        } else if ($c(this).attr('id') == 'custanet-property-table') {
	            custanetprptbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	        } else if ($c(this).attr('id') == 'custanet-tag-table') {
	            custanettagtbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);	        
            } else {
	            custanetothertbl == $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	        }
	    }
	}).click(function (e) {
	    e.stopImmediatePropagation();
	});	
	
	$c('#custanet-other-table').resizable({alsoResize:'#custanet-other-text'});
	
	window.onscroll = function () {
		if( ctype!=1 ){
		    document.getElementById('custanet-main-pannel').style.top = custanetmainpannelt + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-navmenu').style.top = custanetmenu + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-font-table').style.top = custanetfonttbl + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-area-table').style.top = custanetareatbl + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-border-table').style.top = custanetbordertbl + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-property-table').style.top = custanetprptbl + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-tag-table').style.top = custanettagtbl + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';
		    document.getElementById('custanet-other-table').style.top = custanetothertbl + (document.body.scrollTop || document.documentElement.scrollTop) + 'px';	
		}
	};	
	
	$c('#custanet-font-close,#custanet-area-close,#custanet-border-close,#custanet-property-close,#custanet-tag-close').click(function(e){var ob=$c(this).attr('id');ob=ob.replace('close','table');$c('#'+ob).css('display','none');$c.data($c('#'+ob).get(0),'dragFlg',false);e.stopImmediatePropagation();});
	$c('#custanet-other-close').click(function(e){$c("#custanet-other-table").css('display','none');e.stopImmediatePropagation();});
	
	$c('#custanet-command-yours').click(function () {
	    if ($c(this).is(':checked')) {
	        $c('div.custanet-simp-pri,div.custanet-cnt-pri').css('display', '');
	    } else {
	        $c('div.custanet-simp-pri,div.custanet-cnt-pri').css('display', 'none');
	    }
		for (var keyString in myCs) {
	        myCs[keyString].para.css('display', 'none');
	    };
	});	
	
	
	$c('#custanet-command-friends').click(function(){if($c(this).is(':checked') ){$c('div.custanet-simp-fri,div.custanet-cnt-fri').css('display','block');}else{$c('div.custanet-simp-fri,div.custanet-cnt-fri').css('display','none');}$c("div.custanet-otherBox").each(function(){$c(this).css('display','none');});});
	$c('#custanet-command-others').click(function(){if($c(this).is(':checked')){$c('div.custanet-simp-pub,div.custanet-cnt-pub,div.custanet-simp-oth,div.custanet-cnt-oth').css('display','block');}else{$c('div.custanet-simp-pub,div.custanet-cnt-pub,div.custanet-simp-oth,div.custanet-cnt-oth').css('display','none');}$c("div.custanet-otherBox").each(function(){$c(this).css('display','none');});});
	
	$c('#custanet-div-logo').click(function(e){$c('body').css("height","800px").css("width","1000px");});
	$c('#custanet-div-name').click(function(e){$c('body').css("height","").css("width","");});
	function CountLength(str){var r=0;for(var i=0;i<str.length;i++){var c=str.charCodeAt(i);if((c>=0x0 && c<0x81)||(c==0xf8f0)||(c>=0xff61 && c<0xffa0)||(c>=0xf8f1 && c<0xf8f4)){r+=1;}else{r+=2;}}return r;}
	
	var unSelect = function (i) {
	    var ptop = parseInt(i.para.css('top')) + 20;
	    ptop = ptop + 'px';
	    var pleft = parseInt(i.para.css('left')) + 20;
	    pleft = pleft + 'px';
	    i.para.css('top', ptop).css('left', pleft).css('border-width', '0px');
	    i.isselected = false;
	    $c("input[name='custanet-list-cnt'][value='" + i.key + "']").prop("checked",false).parents("tr").find("td").css("background-color", "white");
		
	};
	
	var otC=function(name,para){this.name=name;this.para=para;this.cid='';this.isselected=false;}
	
	var cmenu = function(that,e,key){
 			var ptop, pleft, pcolor, j;
	        
		    var str = "";
		        
	        if(key==null){

                for (var keyString in myCs) {
                    if (myCs[keyString].isselected) {
                        unSelect(myCs[keyString]);
                    }
                }
				//$c(that).css('border-width', '4px');

	        }else{
		        $c(that).css('border-width', '20px');
		        if (myCs[key].isselected == false) {
		            ptop = parseInt(myCs[key].para.css('top')) - 20;
		            ptop = ptop + 'px';
		            pleft = parseInt(myCs[key].para.css('left')) - 20;
		            pleft = pleft + 'px';
		            if (myCs[key].auth == 'r') {
		                pcolor = pric;
		            } else if (myCs[key].auth == 'u' || myCs[key].auth == 't') {
		                pcolor = pubc;
		            } else {
		                pcolor = fric;
		            }
		            $c(that).css('top', ptop).css('left', pleft).css('border-color', pcolor);
		            myCs[key].isselected = true;
		        }
		        var menuint = true;
		        for (var keyString in myCs) {
		            if (myCs[keyString].isselected) {
		                if (menuint) {
		                    str = myCs[keyString].auth;
		                    menuint = false;
		                } else {
		                    if (str != myCs[keyString].auth) {
		                        str = "";
		                        i = max + 1;
		                    }
		                }
		            }
		        }
		        if (str == '') {
		            $c("#custanet-ppy-tw").find("input").prop('checked', false);
		            $c("input.custanet-ppy-pri,input.custanet-ppy-pub").prop("checked", false);
		        } else if (str == 'r') {
		            $c("input.custanet-ppy-pri").prop('checked', true);
		            $c("td.custanet-tw").parents("tr").css("display", "none");
		        } else if (str == 'u') {
		            $c("input.custanet-ppy-pub").prop('checked', true);
		            $c("tr.custanet-ppy-fg").css("display", "none");
		        } else if (str == 't') {
		            $c("input.custanet-ppy-pub").prop('checked', true);
		            $c("td.custanet-tw").find("input").prop("checked", true);
		        } else {
		       		$c(".custanet-ppy-fg").css("display", "block");
		            $c("input.custanet-ppy-fri").prop('checked', true);
		            str = myCs[key].auth;
		            str = str.split(" ");
		            $c("input.custanet-friend-send").prop('checked', true);
		            for (var i = 0, max = str.length; i < max; i++) {
		                $c("input.custanet-friend-send[value='" + str[i] + "']").prop('checked', true);
		            }
		        }		
		
			}        
		        
		        

	        if ($c('#custanet-navmenu').css('display') == 'block') {
	            $c('#custanet-navmenu').css('display', 'none');
	        }
	        if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	            $c('#custanet-font-table').css('display', 'none');
	        } else {
	            $c('#custanet-menu-font').click();
	        }
	        if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	            $c('#custanet-area-table').css('display', 'none');
	        } else {
	            $c('#custanet-menu-area').click();
	        }
	        if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	            $c('#custanet-border-table').css('display', 'none');
	        } else {
	            $c('#custanet-menu-border').click();
	        }
	        if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	            $c('#custanet-property-table').css('display', 'none');
	        } else {
	            $c('#custanet-menu-property').click();
	        }
	        if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	            $c('#custanet-tag-table').css('display', 'none');
	        } else {
	            $c('#custanet-menu-tag').click();
	        }
          
	        $c('#custanet-navmenu').css('display', 'block').css('position', 'absolute').css('top', $c(window).scrollTop() + e.clientY + 'px').css('left', $c(window).scrollLeft() + e.clientX + 'px');
	        custanetmenu = $c('#custanet-navmenu').offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	        $c("#custanet-msg-c").click();
		        
		        
		    if(key==null){
		    	$c("#custanet-menu-font,#custanet-menu-area,#custanet-menu-border,#custanet-menu-copy,#custanet-menu-delete").hide().parents("li").css("height","0");
		    }else{
		    	$c("#custanet-menu-font,#custanet-menu-area,#custanet-menu-border,#custanet-menu-copy,#custanet-menu-delete").show().parents("li").css("height","auto");
		    }
		        
		    if(e.target.id == "custanet-friend-text"){
		    	constFlg = true;
		    }else{
		    	constFlg = false;
		    }
		        
		        
	}
	
	
	var myD = function (key, para) {
	    this.key = key;
	    this.para = para;
	    this.cid = '';
	    this.isselected = false;
	    this.auth = 'u';
	    this.tag = '';
	    this.tw = false;
	    var a = {};
	    $c.extend(a, defaultCss);
	    a['top'] = para.css('top');
	    a['left'] = para.css('left');
	    this.currentcss = a;
		
		this.toMe = function(){
				var me = {};
				var valstr = '';
            	//auth
                me['auth'] =  this.auth.split(' ');
                //twitter
                me['tw'] = this.tw;
                //key
                me['key'] = this.key;
	             //css
	            this.currentcss["bheight"] = $c('body').height();
	            this.currentcss["bwidth"] = $c('body').width();
				me['css'] = JSON.stringify(this.currentcss );
	            //txt
	            valstr = this.para.children('textarea').val();
	            me['txt'] = valstr;
	            //tag
	            me['tag'] = this.tag;
	            
				return JSON.stringify(me);
		}
	
	
	    
	    if (!$c('#custanet-font-opacity-slider').hasClass('ui-slider')) {
	        var workcss = {};
	        $c.extend(workcss, this.currentcss);
	        fonttableformat(workcss);
	        areatableformat(workcss);
	        bordertableformat(workcss);
	        resettablemenu();
	    };
	    $c(this.para).draggable({
	        start: function (event, ui) {
	            for (var keyString in myCs) {
　　					if(myCs[keyString].isselected){
	                   myCs[keyString].startTop = parseInt(myCs[keyString].para.css('top'));
	                   myCs[keyString].startLeft = parseInt(myCs[keyString].para.css('left'));					
					}
				}
	        },
	        drag: function (event, ui) {
	            var topDistance = ui.position.top - myCs[key].startTop;
	            var leftDistance = ui.position.left - myCs[key].startLeft;
	           
	            for (var keyString in myCs) {
　　					if((keyString != key) && (myCs[keyString].isselected)){
	                   myCs[keyString].para.css('top', myCs[keyString].startTop + topDistance + 'px');
	                   myCs[keyString].para.css('left',myCs[keyString].startLeft + leftDistance + 'px');		
					}
				}
	            
	        },
	        stop: function (event, ui) {
	            var topDistance = ui.position.top - myCs[key].startTop;
	            var leftDistance = ui.position.left - myCs[key].startLeft;
	           
	            for (var keyString in myCs) {
　　					if(myCs[keyString].isselected){
	                   myCs[keyString].currentcss['top'] = (myCs[keyString].startTop + topDistance + 20) + 'px';
	                   myCs[keyString].currentcss['left'] = (myCs[keyString].startLeft + leftDistance + 20) + 'px';	
					}
				}	   	       
	            
	            if (('createTouch' in document) || ('ontouchstarT' in document)) {
			      cmenu(this,event,key);
				}
	           
	            
	            
	        }
	    }).resizable({
	        resize: function (event, ui) {
	            var w = ui.size.width;
	            var h = ui.size.height;
	            var resizeW = parseInt(ui.size.width) - parseInt(ui.originalSize.width);
	            var resizeH = parseInt(ui.size.height) - parseInt(ui.originalSize.height);
	            var wi, wj;
	            var appVersion = window.navigator.appVersion.toLowerCase();
                   
	            for (var keyString in myCs) {
　　					if(myCs[keyString].isselected){	            
	                   wi = parseInt(myCs[keyString].para.children('textarea.custanet-tbFore').css('paddingTop'));
	                   wj = parseInt(myCs[keyString].para.children('textarea.custanet-tbFore').css('border-top-width'));

	                   if (appVersion.indexOf("msie") != -1) {
	                        myCs[keyString].para.children('textarea.custanet-tbFore').height(parseInt(myCs[keyString].currentcss['height']) + resizeH - 40);
	                        myCs[keyString].para.children('textarea.custanet-tbFore').width(parseInt(myCs[keyString].currentcss['width']) + resizeW - 40);
	                        myCs[keyString].para.height(myCs[keyString].para.children('textarea.custanet-tbFore').outerHeight() + 40);
	                        myCs[keyString].para.width(myCs[keyString].para.children('textarea.custanet-tbFore').outerWidth() + 40);
	                        if (myCs[keyString].para.children('textarea.custanet-tbFore').outerHeight() <= (wj * 2 + wi * 2)) {
	                            myCs[keyString].para.children('textarea.custanet-tbFore').height((wj * 2 + wi * 2));
	                            myCs[keyString].para.height((wj * 2 + wi * 2) + 40);
	                        }
	                        if (myCs[keyString].para.children('textarea.custanet-tbFore').outerWidth() <= (wj * 2 + wi * 2)) {
	                            myCs[keyString].para.children('textarea.custanet-tbFore').width((wj * 2 + wi * 2));
	                            myCs[keyString].para.width((wj * 2 + wi * 2) + 40);
	                        }
	                   } else {
	                        myCs[keyString].para.children('textarea.custanet-tbFore').height(parseInt(myCs[keyString].currentcss['height']) + resizeH);
	                        myCs[keyString].para.children('textarea.custanet-tbFore').width(parseInt(myCs[keyString].currentcss['width']) + resizeW);
	                        myCs[keyString].para.height(myCs[keyString].para.children('textarea.custanet-tbFore').outerHeight());
	                        myCs[keyString].para.width(myCs[keyString].para.children('textarea.custanet-tbFore').outerWidth());
	                   }	   
	                }
	            }
	        },
	        stop: function (event, ui) {
	            for (var keyString in myCs) {
　　					if(myCs[keyString].isselected){	 
	                    myCs[keyString].currentcss['width'] = parseInt(myCs[keyString].currentcss['width']) + parseInt(ui.size.width) - parseInt(ui.originalSize.width) + 'px';
	                    myCs[keyString].currentcss['height'] = parseInt(myCs[keyString].currentcss['height']) + parseInt(ui.size.height) - parseInt(ui.originalSize.height) + 'px';
	                    var now = new Date();
	                    myCs[keyString].currentcss['time'] = now.toLocaleString();				
					}	            
	            }
	        }
	    }).resizable('disable').css('opacity', '1.00')
	    .click(function (e) {
	        if ($c(this).hasClass('custanet-itemBox')) {
	            var str;
	            $c(this).resizable('enable');
	            if ($c(this).find("textarea").text() == 'Write freely!!') {
	                $c(this).find("textarea").text("");
	            }
	            if (!e.metaKey) {
	                for (var keyString in myCs) {
	                    if (myCs[keyString].isselected) {
	                        unSelect(myCs[keyString]);
	                    }
	                }
	            }
	            $c(this).css('border-width', '20px');
	            $c(this).width($c(this).children('textarea').outerWidth() + 0).height($c(this).children('textarea').outerHeight() + 0);
	            
	            if (myCs[key].isselected == false) {
	           		
	                var pcolor, j;
	                if (myCs[key].auth == 'r') {
	                    pcolor = pric;
	                } else if (myCs[key].auth == 'u') {
	                    pcolor = pubc;
	                } else if (myCs[key].auth == 't') {
	                    pcolor = pubc;
	                } else {
	                    pcolor = fric;
	                }
	                $c(this).css('top', parseInt(myCs[key].para.css('top')) - 20 + 'px').css('left', parseInt(myCs[key].para.css('left')) - 20 + 'px').css('border-color', pcolor);
	                
	                
	                myCs[key].isselected = true;
	                
	                
	            }
	            if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	                $c('#custanet-font-table').css('display', 'none');
	            } else {
	                $c('#custanet-menu-font').click();
	            }
	            if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	                $c('#custanet-area-table').css('display', 'none');
	            } else {
	                $c('#custanet-menu-area').click();
	            }
	            if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	                $c('#custanet-border-table').css('display', 'none');
	            } else {
	                $c('#custanet-menu-border').click();
	            }
	            if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	                $c('#custanet-property-table').css('display', 'none');
	            } else {
	                $c('#custanet-menu-property').click();
	            }
	        	if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	            	$c('#custanet-tag-table').css('display', 'none');
	        	} else {
	            	$c('#custanet-menu-tag').click();
	        	}              
              
	            if ($c('#custanet-navmenu').css('display') == 'block') {
	                $c('#custanet-navmenu').css('display', 'none');
	            }
	        };

	        return false;
	    }).bind('contextmenu', function (e) {
	    
	    
	    	//$c('#custanet-result,#custanet-navmenu').css('z-index', ( Number(zList) + Number(baseZ)  ));
			//$c('.menuclass,#custanet-other-table').css('z-index', Number(zTable) + Number(baseZ));
	
	    
	    	cmenu(this,e,key);
	    	return false;
	    });
	};



	$c("#custanet-friend-text").bind('contextmenu', function (e) {
		cmenu(this,e,null);
		return false;
	});



	function returnC(msg, dcc) {
	    var str = {};
	    $c.extend(str, dcc);
	    delete str['browser'];
	    delete str['left'];
	    delete str['top'];
	    var a = $c("<textarea class='custanet-tbFore' style='margin:0px;'>" + msg + '</textarea>');
	    $c(a).css(str);
	    if (!(browser == 'IE6' || browser == 'IE7' || browser == 'IE8')) {
	        var value;
	        value = hexUnpack(str['color']);
	        value = 'rgba(' + value[0] * 255 + ',' + value[1] * 255 + ',' + value[2] * 255 + ',' + str['font-opacity'] / 100 + ')';
	        str['color'] = value;
	        value = str['text-shadow'] + ' ' + str['text-shadow-positonx'] + ' ' + str['text-shadow-positony'] + ' ' + str['text-shadow-blur'];
	        str['text-shadow'] = value;
	        value = hexUnpack(str['background-color']);
	        value = 'rgba(' + value[0] * 255 + ',' + value[1] * 255 + ',' + value[2] * 255 + ',' + str['background-opacity'] / 100 + ')';
	        str['background-color'] = value;
	        
	        if( str['box-shadow-flg']=="1" ){
		        value = str['box-shadow'] + ' ' + str['box-shadow-positonx'] + ' ' + str['box-shadow-positony'] + ' ' + str['box-shadow-blur'];
		        str['-moz-box-shadow'] = value;
		        str['-webkit-box-shadow'] = value;
		        str['box-shadow'] = value;
	        }else{
	        	str['box-shadow'] = "none";
	        }
	        
	        value = hexUnpack(str['border-color']);
	        value = 'rgba(' + value[0] * 255 + ',' + value[1] * 255 + ',' + value[2] * 255 + ',' + str['border-opacity'] / 100 + ')';
	        str['border-color'] = value;
	        str['-moz-border-radius'] = str['border-radius'];
	        str['-webkit-border-radius'] = str['border-radius'];
	        $c(a).css(str);
	    }
	    return a;
	};
	
	
	if( ctype != 1 ){	
	
		$c('div.custanet-defaultItemBox').draggable({
		    opacity: 0.5,
		    helper: 'clone',
	        cancel: "none",
		    start: function (event, ui) {
		        var a = $c("#custanet-friend-text").val();
		        
		        if(a==""){
		        	a = returnC( "Write freely!!", defaultCss);
		        }else{
		        	a = returnC( a , defaultCss);
		        }
		        
		        $c(ui.helper.get(0)).html(a);
		    },
		    stop: function (event, ui) {
		        var o = $c(ui.helper.get(0)).clone();
		        $c(o).removeClass('custanet-defaultItemBox').addClass('custanet-itemBox')
		        .css( {'position':'absolute','opacity':'1.0','top':$c(ui.helper.get(0)).offset().top,'left':$c(ui.helper.get(0)).offset().left })
		        .prepend("<div class='custanet-not-saved-icon'>not saved</div>");
	
		        $c('body:first').append($c(o));
		        var i = randomStr();
		        myCs[i] = new myD(i, $c(o));
		        var j = 0;
				for( key in myCs ){ j++; } 
		        myCs[i].currentcss['depth'] = Number(myCs[i].currentcss['depth']) + Number(j) ;
		        myCs[i].para.css('z-index', Number(myCs[i].currentcss['depth']) + Number(baseZ));
		        for (var keyString in myCs) {
		            if (myCs[keyString].isselected) {
		                unSelect(myCs[keyString]);
		            }
		        }
		        
		        if (('createTouch' in document) || ('ontouchstarT' in document)) {
				    cmenu( $c(o) ,event, i);
				}
		        
		        $c('#custanet-main-pannel').height('');
		    }
		}).click(function (e) {
			$c(this).find("textarea").focus();
		});

	}
	
	
	
	
	$c('#custanet-menu-copy').click(function (e) {
	    var ptop, pleft,pzindex;
		for (var keyString in myCs) {
	        if (myCs[keyString].isselected) {
	        
	            ptop = parseInt(myCs[keyString].para.css('top')) + 80;
	            pleft = parseInt(myCs[keyString].para.css('left')) + 80;
	            pzindex = Number(myCs[keyString].para.css('z-index')) + 1;
	          
				var str = {};
				$c.extend(str,myCs[keyString].currentcss);				
			    var a = returnC( myCs[keyString].para.find("textarea").val(), str);
			    var b = $c('<div></div>');
			    
			    $c(b).html(a).css({'position':'absolute','top': ptop,'left': pleft,'z-index':pzindex}).prepend("<div class='custanet-not-saved-icon'>not saved</div>");;
			    
			    if (str['text-shadow-flg'] == 0) {
			         $c(a).css('text-shadow', '');
			    }
			    if (str['box-shadow-flg'] == 0) {
			         $c(a).css('box-shadow', 'none').css('-moz-box-shadow', 'none').css('-webkit-box-shadow', 'none');
			    }
			    $c('body:first').append(b);

	           	var i = randomStr();
	        	myCs[i] = new myD(i, $c(b));

	            myCs[i].currentcss['z-index'] = pzindex;
	            myCs[i].currentcss['top'] = ptop ;
	            myCs[i].currentcss['left'] = pleft;
	            myCs[i].isselected = false;
	            
	            $c(b).addClass('custanet-itemBox');
	            
	        }
	    };
	    return false;
	});
	
	
	$c('#custanet-menu-delete').click(function (e) {
	    var delflg = false;
	    
         var custanet = 
        {
            'action': "save",
            'pw': pw,
            'browser': browser,
            'url': location.href,
            'title':  document.title
        }  
        
        var j, l = $c('#custanet-your-list');
        var c = new Array();
        for (var keyString in myCs) {
	       	if (myCs[keyString].isselected) {
	       	  if(keyString.length == 10){
	                j = l.find("input:checkbox[value^=" + keyString + "]");
	                if (j.size() > 0) {
	                    $c(j).parents('tr').remove();
	                }
	                if (l.find('tr').size() == 1) {
	                    $c('#custanet-not-saved').remove();
	                }
	       	   }else{
	       	        delflg=true;
	       			c.push( myCs[keyString].toMe() );
	           }
	           myCs[keyString].para.remove();
	           delete myCs[keyString];
	         }
	    }
	    
	    if (delflg){   
	        custanet['cns'] = c;     
	    }
	        
	        
        $c.ajax({
            url: debugStr + '/del',
            type: "POST",
            data: custanet,
            success: function(result, textStatus, xhr) {
            	result = jQuery.parseJSON(result);
         		custanet_show_func(result, false);
            },
            error: function(xhr, textStatus, error) {
            }
        });	        
	        
	        
	    /*
	    for (var i = 0, max = items.length; i < max; i++) {
	        if (items[i].isselected == true) {
	            if (items[i].cid != '') {
	                custanet.push({
	                    'r': items[i].auth
	                });
	                valstr = items[i].cid;
	                if (valstr == '') {
	                    valstr = i;
	                }
	                custanet.push({
	                    'cid': valstr
	                });
	                delflg = true;
	            } else {
	                j = l.find("input:checkbox[value^=" + i + "]");
	                if (j.size() > 0) {
	                    $c(j).parents('tr').remove();
	                }
	                if (l.find('tr').size() == 1) {
	                    $c('#custanet-not-saved').remove();
	                }
	            }
	            items[i].currentcss = '';
	            items[i].para.children('textarea').attr('value', '');
	            items[i].para.remove();
	            $c("#custanet-not-saved").remove();
	            if ($c('#custanet-your-list').find('tr').size() > 1) {
	                $c('#custanet-your-list').before("<div id='custanet-not-saved' style='text-align:left;'>custanet not to be saved</div>");
	            }
	        }
	    };
	    */
	    
	    
	    /*
	    if (delflg) {
	        valstr = '';
	        for (var i = 0; i < custanet.length; i++) {
	            valstr = valstr + $c.param(custanet[i]) + '&';
	        }
	        valstr = valstr.slice(0, valstr.length - 1);
	        $c.getJSON(debugStr + '/save?callback=?', valstr, function (resp, status) {
	            var getitems = eval('(' + resp + ')');
	            if (getitems[0].cnids != undefined) {
	                $c('#custanet-friend-text').val('');
	                $c('#custanet-main-pannel').height('');
	            }
	            $c('div.custanet-otherBox').remove();
	            oitems = new Array();
	            custanet_show_func(resp, false);
	        });
	    }
	    $c('#custanet-navmenu').css('display', 'none');
	    return false;
	    */
	    
	});
	
	
	$c('#custanet-menu-font').click(function (e) {
	    if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	        $c('#custanet-area-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	        $c('#custanet-border-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	        $c('#custanet-property-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	        $c('#custanet-tag-table').css('display', 'none');
	    }
	    var menuint = true;
	    var workcss = {};
	    for (var keyString in myCs) {
	        if (myCs[keyString].isselected) {
	            if (menuint == true) {
	                $c.extend(workcss, myCs[keyString].currentcss);
	                menuint = false;
	            } else {
	                for (var field in workcss) {
	                    if (workcss[field] == myCs[keyString].currentcss[field]) {} else {
	                        workcss[field] = '';
	                    }
	                }
	            }
	        }
	    };
	    if (workcss['text-shadow-flg'] == 0) {
	        $c("input[name='custanet-text-shadow-radio']:eq(1)").click();
	    };
	    setfonttable(workcss);
	    if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	        $c('#custanet-font-table').css('display', 'block').css('position', 'absolute').css('top', parseInt($c('#custanet-navmenu').css('top')) + 50 + 'px').css('left', parseInt($c('#custanet-navmenu').css('left')) + 80 + 'px');
	    };
	    custanetfonttbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	    return false;
	});
	
		
	$c('#custanet-menu-area').click(function (e) {
	    if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	        $c('#custanet-font-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	        $c('#custanet-border-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	        $c('#custanet-property-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	        $c('#custanet-tag-table').css('display', 'none');
	    }
	    var menuint = true;
	    var workcss = {};
	    for (var keyString in myCs) {
	        if (myCs[keyString].isselected) {
	            if (menuint == true) {
	                $c.extend(workcss, myCs[keyString].currentcss);
	                menuint = false;
	            } else {
	                for (var field in workcss) {
	                    if (workcss[field] == myCs[keyString].currentcss[field]) {} else {
	                        workcss[field] = '';
	                    }
	                }
	            }
	        }
	    };
	    if (workcss['box-shadow-flg'] == 0) {
	        $c('input[name=custanet-box-shadow-radio]:eq(1)').click();
	    };
	    setareatable(workcss);
	    if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	        $c('#custanet-area-table').css('display', 'block').css('position', 'absolute').css('top', parseInt($c('#custanet-navmenu').css('top')) + 78 + 'px').css('left', parseInt($c('#custanet-navmenu').css('left')) + 80 + 'px');
	    };
	    custanetareatbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	    return false;
	});


	$c('#custanet-menu-border').click(function (e) {
	    if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	        $c('#custanet-font-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	        $c('#custanet-area-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	        $c('#custanet-property-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	        $c('#custanet-tag-table').css('display', 'none');
	    }
	    var menuint = true;
	    var workcss = {};
	    for (var keyString in myCs) {
	        if (myCs[keyString].isselected) {
	            if (menuint == true) {
	                $c.extend(workcss, myCs[keyString].currentcss);
	                menuint = false;
	            } else {
	                for (var field in workcss) {
	                    if (workcss[field] == items[i].currentcss[field]) {} else {
	                        workcss[field] = '';
	                    }
	                }
	            }
	        }
	    };
	    setbordertable(workcss);
	    if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	        $c('#custanet-border-table').css('display', 'block').css('position', 'absolute').css('top', parseInt($c('#custanet-navmenu').css('top')) + 105 + 'px').css('left', parseInt($c('#custanet-navmenu').css('left')) + 80 + 'px');
	    };
	    custanetbordertbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	    return false;
	});
	
		
	$c('#custanet-menu-property').click(function (e) {
	    if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	        $c('#custanet-font-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	        $c('#custanet-area-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	        $c('#custanet-border-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	        $c('#custanet-tag-table').css('display', 'none');
	    }
	    
	    
	    if(!constFlg){
	    
		    var menuint = "custanet-int";
		    for (var keyString in myCs) {
		        if (myCs[keyString].isselected) {
		            if (menuint == "custanet-int") {
		                menuint = myCs[keyString].auth;
		            } else {
		                if (menuint != myCs[keyString].auth) {
		                    menuint = "";
		                    i = max + 1;
		                }
		            }
		        }
		    }
		    $c("td.custanet-tw").find("input").prop("checked", false);
		    
			$c("input.custanet-friend-send").prop('checked', false);
	
		    if (menuint == '') {
		        $c("#custanet-ppy-tw").find("input").prop('checked', false);
		        $c("input.custanet-ppy-pri,input.custanet-ppy-pub").prop("checked", false);
		    } else if (menuint == 'r') {
		        $c("input.custanet-ppy-pri").prop('checked', true);
		    } else if (menuint == 'u') {
		        $c("input.custanet-ppy-pub").prop('checked', true);
		    } else if (menuint == 't') {
		        $c("input.custanet-ppy-pub").prop('checked', true);
		        $c("td.custanet-tw").find("input").prop("checked", true);
		    } else {
		        var str;
		        $c("input.custanet-ppy-fri").prop('checked', true);
		        str = menuint.split(" ");
		        $c("input.custanet-friend-send").prop('checked', false);
		        for (var i = 0, max = str.length; i < max; i++) {
		            $c("input.custanet-friend-send[value='" + str[i] + "']").prop('checked', true);
		        }
		    }
	    
	    }
	    
	    
	    if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	        $c('#custanet-property-table').css('display', 'block').css('position', 'absolute').css('top', parseInt($c('#custanet-navmenu').css('top')) + 21 + 'px').css('left', parseInt($c('#custanet-navmenu').css('left')) + 80 + 'px');
	    };
	    
	    custanetprptbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	    return false;
	    
	    
	    
	    
	    
	});	
	
	
	$c('#custanet-menu-tag').click(function (e) {
	    if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	        $c('#custanet-font-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	        $c('#custanet-area-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	        $c('#custanet-border-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	        $c('#custanet-property-table').css('display', 'none');
	    }
	    var menuint = "custanet-int";
	    for (var keyString in myCs) {
	        if (myCs[keyString].isselected) {
	            if (menuint == "custanet-int") {
	                menuint = myCs[keyString].tag;
	            } else {
	                if (menuint != myCs[keyString].tag) {
	                    menuint = "";
	                    i = max + 1;
	                }
	            }
	        }
	    }
	    
	    $c("div.custanet-tag-pp-s-active").removeClass("custanet-tag-pp-s-active");
	    if(menuint!=""){
			$c("#custanet-tag-pp-s").find("span").each(function(){
				if ( $c(this).html() == menuint){
					$c(this).parent("div").addClass("custanet-tag-pp-s-active");
				}
			});
	    }
	    if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	        $c('#custanet-tag-table').css('display', 'block').css('position', 'absolute').css('top', parseInt($c('#custanet-navmenu').css('top')) + 21 + 'px').css('left', parseInt($c('#custanet-navmenu').css('left')) + 80 + 'px');
	    };
	    custanettagtbl = $c(this).offset().top - (document.body.scrollTop || document.documentElement.scrollTop);
	    return false;
	});
	
	
	$c("input[name='custanet-ppy-pp']").click(function (e) {
	    var str = '',
	    wrk, pcolor, j;
	    str = $c(this).attr("value");
	    $c("input." + $c(this).attr("class")).attr("checked", $c(this).attr("checked"));
	    $c("td.custanet-tw").find("input").attr("checked", false);
	    
	    if ( (str == 'r') || (str == 'u')) {
	        if(str == 'r'){pcolor = pric;}else if(str == 'u'){pcolor = pubc;}
	        $c(".custanet-ppy-fg").css("display", "none");
	     } else if (str == 'f') {
	        pcolor = fric;
	        $c(".custanet-ppy-fg").css("display", "block");
	    }
	    $c("input.custanet-friend-send,input.custanet-group-send").attr("checked", false);    
	    
		for (var keyString in myCs) {
	        if (myCs[keyString].isselected) {
	            myCs[keyString].auth = str;
	            myCs[keyString].para.css('border-color', pcolor);
	        }
	    };
	    $c('#custanet-friend-text').css('background-color', pcolor);
	    $c('tr.custanet-list-spl').find('input:checked').parents('tr').children('td').css('background-color', pcolor);
	    e.stopImmediatePropagation();
	});
	
	
	
	$c("input.custanet-friend-send").click(function (e) {
	
	    if ($c(this).is(':checked')) {
	        $c('input.custanet-friend-send[value=' + $c(this).val() + ']').prop("checked", true);
	    } else {
	        $c('input.custanet-friend-send[value=' + $c(this).val() + ']').prop("checked", false);
	    }
	    
	    var str = false,
	        wrk = "",
	        pcolor, cg = [];
	    $c("input.custanet-friend-send").each(function () {
	        if ($c(this).is(':checked')) {
	            str = true;
	        }
	    });
	    
	    if (str) {
	        str = "";
	        $c("input.custanet-friend-send:checked").each(function () {
	            cg.push($c(this).val());
	        });
	        str = cg.join(" ")
	        wrk = "f";
	        pcolor = fric;	 
	    } else {
	        str = 'r';
	        wrk = "r";
	        pcolor = pric;
	    }
	    $c('#custanet-friend-text').css('background-color', pcolor);
		for (var keyString in myCs) {
       		if (myCs[keyString].isselected) {
	            myCs[keyString].auth = str;
	            myCs[keyString].para.css('border-color', pcolor);
	            var j = $c('#custanet-your-list').find("input:checkbox[value^=" + i + "]");
	            $c(j).attr('checked', true).parents('tr').children('td').css('background-color', pcolor);
	            $c(j).parents('tr').children('td:eq(2)').html(wrk);
	        }
	    };
	});
	
	$c("input.custanet-ppy-tw").change(function (e) {
		if($c("input[name='custanet-ppy-tw']:checked").val()=="t"){
			for (var keyString in myCs) {
		        if (myCs[keyString].isselected) {
		            myCs[keyString].tw =true;
		        }
		    }
		}else{
			for (var keyString in myCs) {
		        if (myCs[keyString].isselected) {
		            myCs[keyString].tw = false;
		        }
		    }
		}
	});
		
	
	
	$c("input[name='custanet-text-shadow-radio'],input[name='custanet-box-shadow-radio']").click(function (e) {
	    var ob = $c(this).attr('name');
	    ob = ob.replace('custanet-', '');
	    ob = ob.replace('-radio', '');
	    if ($c(this).attr('value') == 0) {
	        $c('tr.custanet-' + ob + '-noborder').hide();
	        $c('#custanet-' + ob + '-table-row').hide();
	        $c('#custanet-' + ob + '-button').attr('value', 'ShowPicker');
			for (var keyString in myCs) {
       			if (myCs[keyString].isselected) {
	                myCs[keyString].currentcss[ob + '-flg'] = 0;
	                if (ob == 'text-shadow') {
	                    myCs[keyString].para.children('textarea.custanet-tbFore').css(ob, '');
	                } else {
	                    myCs[keyString].para.children('textarea.custanet-tbFore').css('box-shadow', 'none').css('-moz-box-shadow', 'none').css('-webkit-box-shadow', 'none');
	                }
	            }
	        };
	    } else {
	        $c('tr.custanet-' + ob + '-noborder').show();
			for (var keyString in myCs) {
       			if (myCs[keyString].isselected) {
	                value = myCs[keyString].currentcss[ob] + ' ' + myCs[keyString].currentcss[ob + '-positonx'] + ' ' + myCs[keyString].currentcss[ob + '-positony'] + ' ' + myCs[keyString].currentcss[ob + '-blur'];
	                myCs[keyString].currentcss[ob + '-flg'] = 1;
	                if (ob == 'text-shadow') {
	                    myCs[keyString].para.children('textarea.custanet-tbFore').css(ob, value);
	                } else {
	                    myCs[keyString].para.children('textarea.custanet-tbFore').css('box-shadow', value).css('-moz-box-shadow', value).css('-webkit-box-shadow', value);
	                }
	            }
	        };
	    };
	    e.stopImmediatePropagation();
	});
	
	
	
	$c('#custanet-font-default,#custanet-area-default,#custanet-border-default,#custanet-property-default').click(function (e) {
         var custanet = 
        {
            'action': "default",
            'pw': pw,
            'url': location.href
        }    	   
	    var css = {};
	    switch ($c(this).attr('id')) {
		    case 'custanet-font-default':
		        css['font-family'] = $c("#custanet-font-family").val();
		        css['color'] = $c("#custanet-color").val();
		        css['font-opacity'] = $c("#custanet-font-opacity-spin").val();
		        css['font-size'] = $c("#custanet-font-size-spin").val() + "pt";
		        if ($c("#custanet-fontTypeface").val() == "Regular") {
		            css['font-style'] = "normal";
		            css['font-weight'] = "400";
		        } else if ($c("#custanet-fontTypeface").val() == "Italic") {
		            css['font-style'] = "italic";
		            css['font-weight'] = "400";
		        } else if ($c("#custanet-fontTypeface").val() == "Bold") {
		            css['font-style'] = "normal";
		            css['font-weight'] = "700";
		        } else {
		            css['font-style'] = "italic";
		            css['font-weight'] = "700";
		        }
		        css['text-decoration'] = $c("#custanet-text-decoration").val();
		        css['letter-spacing'] = $c("#custanet-letter-spacing-spin").val() + "px";
		        css['word-spacing'] = $c("#custanet-word-spacing-spin").val() + "px";
		        css['line-height'] = $c("#custanet-line-height-spin").val() + "em";
		        css['text-align'] = $c("#custanet-text-align").val();
		        css['text-shadow-positonx'] = $c("#custanet-text-shadow-positonx-spin").val() + "px";
		        css['text-shadow-positony'] = $c("#custanet-text-shadow-positony-spin").val() + "px";
		        css['text-shadow-blur'] = $c("#custanet-text-shadow-blur-spin").val() + "px";
		        css['text-shadow'] = $c("#custanet-text-shadow").val();
		        css['text-shadow-flg'] = $c("input[name='custanet-text-shadow-radio']:checked").val();
		        break;
		    case 'custanet-area-default':
		        css['depth'] = $c("#custanet-depth-spin").val();
		        css['height'] = $c("#custanet-height-spin").val() + "px";
		        css['width'] = $c("#custanet-width-spin").val() + "px";
		        css['background-color'] = $c("#custanet-background-color").val();
		        css['background-opacity'] = $c("#custanet-background-opacity-spin").val();
		        css['padding'] = $c("#custanet-padding-spin").val() + "px";
		        css['border-radius'] = $c("#custanet-border-radius-spin").val() + "px";
		        css['box-shadow'] = $c("#custanet-box-shadow").val();
		        css['box-shadow-flg'] = $c("input[name='custanet-box-shadow-radio']:checked").val();
		        css['box-shadow-positonx'] = $c("#custanet-box-shadow-positonx-spin").val() + "px"; 
		        css['box-shadow-positony'] = $c("#custanet-box-shadow-positony-spin").val() + "px"; 
		        css['box-shadow-blur'] = $c("#custanet-box-shadow-blur-spin").val() + "px";
		        break;
		    case 'custanet-border-default':
		    	css['border-style'] = $c("#custanet-border-style").val();	
		    	css['border-color'] = $c("#custanet-border-color").val();
		    	css['border-opacity'] = $c("#custanet-border-opacity-spin").val();
		    	css['border-width'] = $c("#custanet-border-width-spin").val() + "px";
		        break;
		    case 'custanet-property-default':
	    };
	    
		custanet['css'] = JSON.stringify(css);
	    
	    
	    var obj = $(this);
	    obj.css("visibility","hidden");
	    
        $c.ajax({
            url: debugStr + '/set',
            type: "POST",
            data: custanet,
            success: function(result, textStatus, xhr) {
            	result = result.replace(/'/g,"")
            	defaultCss = jQuery.parseJSON(result);
            	setTimeout( function() {
            		 obj.css("visibility","visible");
				}, 3000);
            },
            error: function(xhr, textStatus, error) {
            	setTimeout( function() {
            		 obj.css("visibility","visible");
				}, 3000);            	
            }
        });	    
	    
	    
	    e.stopImmediatePropagation();
	});
	
	
	
	$c('div.custanet-others-msg').on('click', function () {
	    var i = $c(this).find('a').html();
	    if (oitems[i].css('display') == 'block') {
	        oitems[i].css('display', 'none');
	        $c(this).css('background-color', '#FFF');
	    } else {
	        oitems[i].css('display', 'block');
	        $c(this).css('background-color', '');
	    }
	    return false;
	});
		
	$c('#custanet-main-pannel').click(function(e){e.stopImmediatePropagation();});
	
	$c('html,#stopimmediatePropagation').click(function (e) {

	    if (!$c.data($c('#custanet-font-table').get(0), 'dragFlg')) {
	        $c('#custanet-font-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-area-table').get(0), 'dragFlg')) {
	        $c('#custanet-area-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-border-table').get(0), 'dragFlg')) {
	        $c('#custanet-border-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-property-table').get(0), 'dragFlg')) {
	        $c('#custanet-property-table').css('display', 'none');
	    }
	    if (!$c.data($c('#custanet-tag-table').get(0), 'dragFlg')) {
	        $c('#custanet-tag-table').css('display', 'none');
	    }
	    $c('#custanet-navmenu').css('display', 'none');
	    
		for (var keyString in myCs) {
       		if (myCs[keyString].isselected) {
	            unSelect(myCs[keyString]);
	        }
	    }
	    $c('#custanet-your-list').find('input:checkbox').attr('checked', false);
	    $c('#custanet-your-list').find('td').css('background-color', 'white');
	});
  
  
  
  
  
	var custanet_save_func = function (cflg) {
	 	
	 	
	 cflg = !constFlg; 	
	 	
	 /*	
     if(cflg){	 	
	 	var f=false;
		for (var keyString in myCs) {
       		if (myCs[keyString].isselected) {	
		 		f = true;
		 		break;
			}
		}
		if(!f){return;}
	  }
	  */
	  
        var str = "",valstr= '',wrk;

        for (key in defaultCss) {
            valstr = valstr + defaultCss[key] + '!';
        }
      
         var custanet = 
        {
            'action': "save",
            'pw': pw,
            'browser': browser,
            'url': location.href,
            'title':  document.title
        }       
        
        if ($c("span.custanet-time:first").size() > 0) {
            custanet['dt'] = $c("span.custanet-time:first").html();
        }
        
        if(cflg){
        	//custanet
	        var c = new Array();
			for (var keyString in myCs) {
	       		if (myCs[keyString].isselected) {
	       			c.push( myCs[keyString].toMe() );
	            }
	        }
	        custanet['cns'] = c;
	        
		}else{			
			//simple text
			var me = {},cg = []; 
  			var valstr = $c("input[name='custanet-ppy-pp']:checked").val();
        	if(valstr=="f"){
	 	        $c("input.custanet-friend-send:checked").each(function () {
		            cg.push($c(this).val());
		        });
		        valstr = cg;
        	}
			me['auth'] =  valstr;
            //twitter
			if( $c("input[name='custanet-spl-tw']:checked").val() == "t" ){
				me['tw'] = "true";
			}
            //txt
            me['txt'] = $c("#custanet-friend-text").val();
            $c("#custanet-friend-text").val("");
			//key
			me['key'] = randomStr();		
			//tag
			CurlTag = [];
			$c("#custanet-tag-pp-s div.custanet-tag-active").each(function(){
				CurlTag.push( $c(this).find("span").attr("class") );
			});
			me['tag'] = CurlTag;
			
			var c = new Array();
			c.push( JSON.stringify(me) );

			custanet['cns'] = c;
		}
		

        $c.ajax({
            url: debugStr + '/set',
            type: "POST",
            data: custanet,
            success: function(result, textStatus, xhr) {
            	result = jQuery.parseJSON(result);
         		custanet_show_func(result, false);
            },
            error: function(xhr, textStatus, error) {
            }
        });
        
        $("#custanet-navmenu").hide();
        
    };
    
    
	$c('#custanet-menu-save').click(function(e){
		custanet_save_func(true);
		return false;
	});   
    
    
	var custanetpcolor=function(){if($c("input[name='custanet-spl-pp']").val()=='r'){return pric;}else{return pubc;}};
	var custanetlistchg=function(pcolor,txt,dom){$c("input[name='custanet-list-spl']").each(function(e){if($c(this).val() !=$c(dom).val() ){$c(this).attr('checked',false).parents('tr').children('td').css('background-color','');}});if($c(dom).attr('checked')){$c(dom).parents('tr').children('td').css('background-color',pcolor);$c('#custanet-friend-text').css('background-color',pcolor).val(txt);}else{$c(dom).parents('tr').children('td').css('background-color','');$c('#custanet-friend-text').val('');}};
  

	
	
	
var custanetShowCount=function(cpri,cpub,cfri,coth){if(cpri>0){$c("#custanet-yours-count").html(cpri).parent("div").css("display","");}else{$c("#custanet-yours-count").parent("div").css("display","none");}if(cfri>0){$c("#custanet-friends-count").html(cfri).parent("div").css("display","");}else{$c("#custanet-friends-count").parent("div").css("display","none");}if(coth+cpub>0){$c("#custanet-others-count").html(coth+cpub).parent("div").css("display","");}else{$c("#custanet-others-count").parent("div").css("display","none");}}

var bwidth,bheight;

$c('#custanet-others-msgs').delegate('.custanet-cnt-pri,.custanet-cnt-pub,.custanet-cnt-fri','click',function(){
   var id = $c(this).find("span.custanet-key").attr("value");
   if( myCs[id].para.css("display") == "none" ){
		myCs[id].para.css("display","block").click();
		$c(this).addClass("active");
		
		if( myCs[id].bwidth != null ){
			$c("body").width(myCs[id].bwidth).height(myCs[id].bheight);
		}
		
   }else{
		myCs[id].para.css("display","none");
		$c(this).removeClass("active");
		$c("body").css({"width":"auto","height":"auto"});
   }
});


var custanet_show_func = function (resp, ba) {

    var msgs = $c('#custanet-others-msgs');
    var c = "",
        d = "";
    var pc, tw, cntxt, wrk;

    for (var cn in resp) {
        if (resp[cn].key != undefined ) {
            pc = "";
            tw = "";
            cntxt = "";
            cn = resp[cn];

            if ((cn.usr[0].id == cuser.key) && (cn.pub == 'r')) {
                pc = pric;
                wrk = "custanet-cnt-pri";
            } else if (cn.pub == 'u') {
                pc = pubc;
                wrk = "custanet-cnt-pub";
            } else {
                pc = fric;
                wrk = "custanet-cnt-fri";
                var ary = new Array();
                for (cu in cn.usr) {
                    if (cn.usr[cu].id != undefined) {
                        ary.push(cn.usr[cu].id);
                    }
                }
                cn.pub = ary.join(" ")
            }

            if (cn.tw == 'true') {
                tw = "<img style='padding:2px;' height='14px' src='http://twitter-badges.s3.amazonaws.com/t_mini-a.png'>";
            }

            if (cn.css != "" && cn.css != undefined) {
                cntxt = "ui-icon ui-icon-radio-on";
            } else {
                wrk = "";
            }

            $c("span.custanet-key[value='" + cn.wrk + "']").parents("div.custanet-cnt-pri").remove();
            $c("span.custanet-key[value='" + cn.wrk + "']").parents("div.custanet-cnt-fri").remove();
            $c("span.custanet-key[value='" + cn.wrk + "']").parents("div.custanet-cnt-pub").remove();

            var tag = "";
            for (t in cn.tag) {
                if (custanet_genre[cn.tag[t]] != undefined) {
                    tag += custanet_genre[cn.tag[t]] + " ";
                }
            }
            c += "<div class='" + wrk + "'>" +
                "<div style='background-color:" + pc + "'>" +
                "<span class='" + cntxt + "' style='float:left;height:15px;width:16px;'></span>" + tw +
                "<span class='custanet-key' value='" + cn.key + "'></span>" +
                "<span class='custanet-user-key' value='" + cn.usr[0].id + "'></span>" +
                "<span class='custanet-user-name' style='float:left;'>" + cn.usr[0].nam + "</span><br>" +
                "<span class='custanet-time'>" + cn.dat + "</span><br>" +
                "<span class='custanet-tag'>" + tag + "</span>" +
                "</div>" +
                "<div style='word-break: break-all;margin-bottom:20px;'>" + cn.txt + "<br></div></div>";

            $c("input[name='custanet-list-cnt'][value='" + cn.wrk + "']").parents("tr").remove();

            if ($c(".custanet-list-div").size() == 0) {
                $c("#custanet-not-saved").remove();
            }
            if (cn.css != "" && cn.css != undefined) {

                for (var keyString in myCs) {
                    if (myCs[cn.key] != null) {
                        $c(myCs[cn.key].para).remove();
                    }
                    if (myCs[cn.wrk] != null) {
                        $c(myCs[cn.wrk].para).remove();
                    }
                }

                //存在しない
                var str = {};
                $c.extend(str, jQuery.parseJSON(cn.css));
                var a = returnC((cn.txt).replace(/<br>/g, "\r\n"), str);
                var b = $c('<div></div>');
                $c(b).html(a).css('position', 'absolute').css('top', str['top']).css('left', str['left']).css('display', 'none').css('z-index', Number(str['depth']) + Number(baseZ));
                if (str['text-shadow-flg'] == 0) {
                    $c(a).css('text-shadow', '');
                }
                if (str['box-shadow-flg'] == 0) {
                    $c(a).css('box-shadow', 'none').css('-moz-box-shadow', 'none').css('-webkit-box-shadow', 'none');
                }
                $c('body:first').append(b);
                myCs[cn.key] = new myD(cn.key, $c(b));
                myCs[cn.key].auth = cn.pub;
                myCs[cn.key].bwidth = str["bwidth"];
                myCs[cn.key].bheight = str["bheight"];
                myCs[cn.key].currentcss = str;
                $c(b).addClass('custanet-itemBox');
            }
        }
    }

    if (ba) {
        $c(msgs).append(c);
    } else {
        $c(msgs).prepend(c);
    }

    if ($c("#custanet-others-msgs div").size() == 0) {
        $c("#custanet-others-msgs").html("<div id='custanet-nopost'>no post</div>")
    } else {
        $c("#custanet-nopost").remove();
    }

    $c('#custanet-main-pannel').css('display', 'block');

};


    $c("#custanet-makefriend").click(function () {
        var data = [{
            'o': $c("#custanet-makefriend-id").html()
        }, {
            'pw': pw
        }, {
            'i': true
        }],
            j;
        var valstr = "";
        for (var i = 0; i < data.length; i++) {
            valstr = valstr + $c.param(data[i]) + '&';
        }
        $.ajax({
            url: debugStr + '/other',
            dataType: 'text',
            data: valstr,
            xhr: window.XDomainRequest ? hookXhr : undefined,
            success: function (resp) {

            }
        });
    });
    var custanet_get_func = function (ba) {
        var valstr = '';
        var value;
        var custanet = [{
            'password': pw
        }, {
            'url': location.href
        }, {
            'ba': ba
        }];
        if (!ba) {
            if ($c("span.custanet-time:first").size() > 0) {
                custanet.push({
                    'dt': $c("span.custanet-time:first").html()
                });
            }
        } else {
            if ($c("span.custanet-time:last").size() > 0) {
                custanet.push({
                    'dt': $c("span.custanet-time:last").html()
                });
            }
        }
        for (var i = 0, max = items.length; i < max; i++) {
            if (items[i].cid != '') {
                custanet.push({
                    'cid': items[i].cid
                });
            }
        }
        for (var i = 0, max = custanet.length; i < max; i++) {
            valstr = valstr + $c.param(custanet[i]) + '&';
        }
        valstr = valstr.slice(0, valstr.length - 1);
        $c.getJSON(debugStr + '/show?callback=?', valstr, function (resp, status) {
            custanet_show_func(resp, ba);
        });
        return false;
    };
    for (var i = 0, max = items.length; i < max; i++) {
        if (items[i].isselected == true) {
            items[i].auth = 'r';
            items[i].para.css('border-color', 'rgb(255,0,0)');
        }
    };
    
    
    $c('#custanet-loading').remove();
    $c('#custanet-main-pannel').css('display', 'none');
    
    custanet_show_func(ccns, true);
    
	if( ctype==1 ){
		$c('#custanet-main-pannel').draggable( 'option', 'cancel', '#custanet-main-pannel' ).css({
			"width":"100%",
			"position":"fixed",
			"border":"none",
			"top": "initial",
			"bottom":"0"
		});
		$c("#custanet-write-msg-c,#custanet-write-save,#custanet-write-close").hide();
		$c("#custanet-main-pannel-m").height(30).width(30).css({"padding-top":"5px","position":"absolute","right":"0"});
		$c("custanet-main-pannel").css({"padding":"4px 0 0 0","border":"border-top: 10px solid #000"});

		$c("#custanet-write").bind('touchstart', function() {
		//$c("#custanet-write").click(function(){
			$c("#custanet-write-msg-c,#custanet-write-save,#custanet-write-close").show();
			$("#custanet-friend-text").focus() 
			$c(this).hide();
		}).show();
		
		$c("#custanet-write-save").bind('touchstart', function() {
			constFlg = true;
			custanet_save_func(true);
			return false;
		});
		
		$c("#custanet-write-close").bind('touchstart', function() {
		//$c("#custanet-write-close").click(function(){
			$c("#custanet-write-msg-c,this,#custanet-write-save").hide();
			$c("#custanet-write").show();
		});
		
		$c('#custanet-main-pannel-m').bind('touchstart', function() {
		    if ($c(this).text() == '-') {
		        $c('#custanet-command').css('display', 'none');
		        $c(this).text('+');
		    } else {
		        $c('#custanet-command').css('display', 'block');
		        $c(this).text('-');
		    }
		});		
		
		
	}    
    
}	


function ctnE() {
    var a = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    a = a.split('');
    var pw = '';
    for (var i = 0; i < 10; i++) {
        pw += a[Math.floor(Math.random() * a.length)];
    }
    
    
    
    
    
    $c('#custanet_welcome_iframe').attr('src', debugStr + '/test?pw=' + pw);
    var friends = [],
        groups = [],
        mode = false,
        tid1, xxxc = 0;
    setTimeout(function ii() {
        tid1 = setInterval(xxx, 2000);
    }, 1000);
    var tid2 = setInterval(yyy, 500);
    var gresp;

    function xxx() {
        xxxc++;
        if (xxxc > 3) {
            clearInterval(tid1);
            clearInterval(tid2);
            $c("#custanet-loading").html("Custanet<br>Please<a href='" + debugStr + "' target='_blank'>Login</a>");
        } else {
            var obj;
            $c.getJSON(debugStr + '/login?callback=?', {
                "password": pw,
                "url": location.href
            }, function (resp, status) {
                if (resp != 'no') {
                    var str = "",
                        wrk = "",
                        stri = "",
                        strj = "",
                        gp = [];
                    $c('#custanet-div-name').html(resp.name);
                    $c.extend(defaultCss, iniC(resp.css));
                    $c.data($c("#custanet-name-key").get(0), 'ykey', resp.key);
                    if (resp.fst != null) {
                        for (var i = 0, max = (resp.fst).length; i < max; i++) {
                            str = resp.fst[i].split("#");
                            friends.push({
                                name: str[0],
                                value: str[1]
                            });
                            gp.push(i);
                        }
                        groups.push({
                            name: "All",
                            value: gp
                        });
                        if (resp.gst != null) {
                            for (var i = 0, maxi = (resp.gst).length; i < maxi; i++) {
                                str = resp.gst[i].split("##");
                                stri = str[0];
                                str = str[1].split("#");
                                gp = [];
                                for (var j = 0, maxj = str.length; j < maxj; j++) {
                                    for (var k = 0, maxk = friends.length; k < maxk; k++) {
                                        if (str[j] == friends[k].value) {
                                            gp.push(k);
                                        }
                                    }
                                }
                                groups.push({
                                    name: stri,
                                    value: gp
                                });
                            }
                        }
                        str = "";
                        for (var i = 0, max = friends.length; i < max; i++) {
                            wrk += "<span><input type='checkbox' class='custanet-friend-send' value='" + i + "'>" + friends[i].name + "</span>";
                        }
                        $c("#custanet-spl-fri").append(wrk);
                        str = "<tr class='custanet-ppy-fg'><td class='custanet-col1'>&emsp;&emsp;Friend</td><td colspan=2>" + wrk + "</td></tr>";
                        $c('#custanet-property-table').append(str);
                        str = "";
                        wrk = "";
                        for (var i = 0, max = groups.length; i < max; i++) {
                            wrk += "<span><input type='checkbox' class='custanet-group-send' value='" + i + "'>" + groups[i].name + "</span>";
                        }
                        $c("#custanet-spl-gro").append(wrk);
                        str = "<tr class='custanet-ppy-fg'><td class='custanet-col1'>&emsp;&emsp;Group</td><td colspan=2>" + wrk + "</td></tr>";
                        $c('#custanet-property-table').append(str);
                    } else {
                        $c("span.custanet-ppy-pri-span").html("private");
                    }
                    if (resp.t != undefined) {
                        var str = "";
                        $c("#custanet-tw-a").append('<span><input id="custanet-twa" type="checkbox">&thinsp;<img src="http://twitter-badges.s3.amazonaws.com/t_mini-a.png"/>' + resp.t + '</span>');
                        $c("#custanet-tw-b").append('<span><input id="custanet-twb"  type="checkbox">&thinsp;<img src="http://twitter-badges.s3.amazonaws.com/t_mini-a.png"/>' + resp.t + '</span>');
                    } else {
                        $c("td.custanet-tw").parents("tr").remove();
                    }
                    clearInterval(tid1);
                    mode = true;
                    gresp = resp;
                }
            });
        }
    }
    function yyy() {
        if (!mode) {} else {
            clearInterval(tid2);
            h = $c('#custanet-main-pannel').height(), w = $c('#custanet-main-pannel').width();

            function zzz() {
                var valstr = '';
                var value;
                var custanet = [{
                    'password': pw
                }, {
                    'url': location.href
                }, {
                    'ba': true
                }];
                if ($c("span.custanet-time:first").size() > 0) {
                    custanet.push({
                        'dt': $c("span.custanet-time:first").html()
                    });
                }
                for (var i = 0, max = custanet.length; i < max; i++) {
                    valstr = valstr + $c.param(custanet[i]) + '&';
                }
                valstr = valstr.slice(0, valstr.length - 1);
                $c.getJSON(debugStr + '/more?callback=?', valstr, function (resp, status) {
                    if (resp.c > 0) {
                        $c("#custanet-more-new").remove();
                        c = $c("<div id='custanet-more-new' style='padding:10px 0px;font-size:11pt;background-color:#FFF;text-align:center;'><span>more new " + resp.c + " custanet</span></div>").bind("click", function () {
                            custanet_get_func(false);
                        });
                        $c('#custanet-others-msgs').prepend($c(c));
                    }
                });
                return false;
            };
            var tShow = setInterval(zzz, 60000);
            ctn();
        }
    }
}

function ctnC() {

	$c('#custanet-div-name').html(cuser.nam);
	$c.data($c("#custanet-name-key").get(0), 'ykey',cuser.key);
	$c.extend(defaultCss, cuser.css);
    
    ctwName ="b";
    
    var str, wrk = "",str2="";
    
    if (cuser.fri != null) {
        str = "";
        
        for( var i in cuser.fri ){
        	if( cuser.fri[i].id != undefined ){
            	wrk += "<div><input type='checkbox' class='custanet-friend-send' value='" + cuser.fri[i].id + "'>" + cuser.fri[i].nam + "</div>";
        	}
        }
        $c("#custanet-spl-fri").append(wrk);
        
        wrk = "<dt class='custanet-ppy-fg'>Friend</dt><dd class='custanet-ppy-fg'>" + wrk + "</dd>";
       
    	$c('#custanet-property-table dt.custanet-ppy-tw').before(wrk+str);
    
    } else {
        $c("span.custanet-ppy-pri-span").html("private");
    }
    
    if ( cuser.tw != undefined ) {
        var str = "";
        $c("#custanet-tw-a").append('<span><input id="custanet-twa" type="checkbox">&thinsp;<img src="http://twitter-badges.s3.amazonaws.com/t_mini-a.png"/>' + cuser.tw + '</span>');
        $c("#custanet-tw-b").append('<span><input id="custanet-twb"  type="checkbox">&thinsp;<img src="http://twitter-badges.s3.amazonaws.com/t_mini-a.png"/>' + cuser.tw + '</span>');
    } else {
        $c(".custanet-ppy-tw").remove();
    }
    
    ctn();
    
　　

}



/*
if(browser.indexOf("IE")!=-1){
ctnE();
}else{
ctnC();
}
*/
ctnC();




});